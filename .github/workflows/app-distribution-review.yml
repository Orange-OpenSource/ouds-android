name: app-distribution-review

on:
  workflow_dispatch:

jobs:
  app-distribution-review:
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up our JDK environment
        uses: actions/setup-java@v4
        with:
          distribution: 'zulu'
          java-version: '17'

      - name: Set up signing configuration
        uses: ./.github/actions/setup-signing
        with:
          keystore: ${{ secrets.SIGNING_KEYSTORE }}
          store-password: ${{ secrets.SIGNING_STORE_PASSWORD }}
          key-alias: ${{ secrets.SIGNING_KEY_ALIAS }}
          key-password: ${{ secrets.SIGNING_KEY_PASSWORD }}

      - name: Decode Google service account
        shell: bash
        run: |
          GOOGLE_SERVICE_ACCOUNT_FILE_PATH=${RUNNER_TEMP}/google-service-account.json
          echo "GOOGLE_SERVICE_ACCOUNT_FILE_PATH=${GOOGLE_SERVICE_ACCOUNT_FILE_PATH}" >> $GITHUB_ENV
          echo "${{ secrets.GOOGLE_SERVICE_ACCOUNT }}" | base64 -d > ${GOOGLE_SERVICE_ACCOUNT_FILE_PATH}

      - name: Upload APK to Firebase App Distribution
        uses: ./.github/actions/app-distribution
        with:
          append-git-sha-to-version-name: 'true'
          application-id: 'com.orange.ouds.review.app'
          firebase-token: ${{ secrets.FIREBASE_TOKEN }}
          git-tag-prefix: 'ci/review-app'
          github-token: ${{ secrets.GITHUB_TOKEN }}
          group: 'ouds-android-review'

      - name: Publish Firebase App Distribution QR code
        run: ./gradlew publishAppDistributionQrCode
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
