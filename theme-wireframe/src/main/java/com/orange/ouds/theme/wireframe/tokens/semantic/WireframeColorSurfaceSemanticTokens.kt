//
// Software Name: OUDS Android
// SPDX-FileCopyrightText: Copyright (c) Orange SA
// SPDX-License-Identifier: MIT
//
// This software is distributed under the MIT license,
// the text of which is available at https://opensource.org/license/MIT/
// or see the "LICENSE" file for more details.
//
// Software description: Android library of reusable graphical components
//

// Wireframe brand tokens version 1.6.0
// Generated by Tokenator

package com.orange.ouds.theme.wireframe.tokens.semantic

import androidx.compose.ui.graphics.Color
import com.orange.ouds.theme.wireframe.tokens.raw.WireframeColorRawTokens
import com.orange.ouds.theme.tokens.semantic.OudsColorSurfaceSemanticTokens
import com.orange.ouds.tokens.raw.ColorRawTokens

data class WireframeColorSurfaceSemanticTokens(
    override val surfaceBrandPrimaryDark: Color = WireframeColorRawTokens.colorRoyalBlue300,
    override val surfaceBrandPrimaryLight: Color = WireframeColorRawTokens.colorRoyalBlue600,
    override val surfaceBrandSecondaryDark: Color = WireframeColorRawTokens.colorRustyRed400,
    override val surfaceBrandSecondaryLight: Color = WireframeColorRawTokens.colorRustyRed600,
    override val surfaceBrandTertiaryDark: Color = Color(0x00ff0000),
    override val surfaceBrandTertiaryLight: Color = Color(0x00ff0000),
    override val surfaceStatusAccentEmphasizedDark: Color = WireframeColorRawTokens.colorRustyRed300,
    override val surfaceStatusAccentEmphasizedLight: Color = WireframeColorRawTokens.colorRustyRed600,
    override val surfaceStatusAccentMutedDark: Color = WireframeColorRawTokens.colorRustyRed900,
    override val surfaceStatusAccentMutedLight: Color = WireframeColorRawTokens.colorOpacityRustyRed,
    override val surfaceStatusInfoEmphasizedDark: Color = ColorRawTokens.colorFunctionalDodgerBlue300,
    override val surfaceStatusInfoEmphasizedLight: Color = ColorRawTokens.colorFunctionalDodgerBlue700,
    override val surfaceStatusInfoMutedDark: Color = ColorRawTokens.colorFunctionalDodgerBlue900,
    override val surfaceStatusInfoMutedLight: Color = ColorRawTokens.colorOpacityDodgerBlue,
    override val surfaceStatusNegativeEmphasizedDark: Color = ColorRawTokens.colorFunctionalScarlet300,
    override val surfaceStatusNegativeEmphasizedLight: Color = ColorRawTokens.colorFunctionalScarlet600,
    override val surfaceStatusNegativeMutedDark: Color = ColorRawTokens.colorFunctionalScarlet900,
    override val surfaceStatusNegativeMutedLight: Color = ColorRawTokens.colorOpacityScarlet,
    override val surfaceStatusNeutralEmphasizedDark: Color = WireframeColorRawTokens.colorOpacityWhite920,
    override val surfaceStatusNeutralEmphasizedLight: Color = WireframeColorRawTokens.colorOpacityBlack920,
    override val surfaceStatusNeutralMutedDark: Color = WireframeColorRawTokens.colorOpacityWhite80,
    override val surfaceStatusNeutralMutedLight: Color = WireframeColorRawTokens.colorOpacityBlack40,
    override val surfaceStatusPositiveEmphasizedDark: Color = ColorRawTokens.colorFunctionalMalachite300,
    override val surfaceStatusPositiveEmphasizedLight: Color = ColorRawTokens.colorFunctionalMalachite750,
    override val surfaceStatusPositiveMutedDark: Color = ColorRawTokens.colorFunctionalMalachite900,
    override val surfaceStatusPositiveMutedLight: Color = ColorRawTokens.colorOpacityMalachite,
    override val surfaceStatusWarningEmphasizedDark: Color = ColorRawTokens.colorFunctionalSun300,
    override val surfaceStatusWarningEmphasizedLight: Color = ColorRawTokens.colorFunctionalSun500,
    override val surfaceStatusWarningMutedDark: Color = ColorRawTokens.colorFunctionalSun900,
    override val surfaceStatusWarningMutedLight: Color = ColorRawTokens.colorOpacitySun
) : OudsColorSurfaceSemanticTokens
