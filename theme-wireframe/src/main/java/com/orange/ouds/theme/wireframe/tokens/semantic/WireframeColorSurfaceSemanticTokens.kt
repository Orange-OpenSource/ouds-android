//
// Software Name: OUDS Android
// SPDX-FileCopyrightText: Copyright (c) Orange SA
// SPDX-License-Identifier: MIT
//
// This software is distributed under the MIT license,
// the text of which is available at https://opensource.org/license/MIT/
// or see the "LICENSE" file for more details.
//
// Software description: Android library of reusable graphical components
//

// Wireframe brand tokens version 2.0.1
// Generated by Tokenator

package com.orange.ouds.theme.wireframe.tokens.semantic

import androidx.compose.ui.graphics.Color
import com.orange.ouds.theme.wireframe.tokens.raw.WireframeColorRawTokens
import com.orange.ouds.theme.tokens.semantic.OudsColorSurfaceSemanticTokens
import com.orange.ouds.tokens.raw.ColorRawTokens

data class WireframeColorSurfaceSemanticTokens(
    override val surfaceBrandPrimaryDark: Color = WireframeColorRawTokens.colorRoyalBlue300,
    override val surfaceBrandPrimaryLight: Color = WireframeColorRawTokens.colorRoyalBlue600,
    override val surfaceBrandSecondaryDark: Color = WireframeColorRawTokens.colorRustyRed400,
    override val surfaceBrandSecondaryLight: Color = WireframeColorRawTokens.colorRustyRed600,
    override val surfaceBrandTertiaryDark: Color = Color(0x00ff0000),
    override val surfaceBrandTertiaryLight: Color = Color(0x00ff0000),
    override val surfaceInverseHighDark: Color = WireframeColorRawTokens.colorFunctionalGrayLight160,
    override val surfaceInverseHighLight: Color = WireframeColorRawTokens.colorFunctionalGrayDark720,
    override val surfaceInverseLowDark: Color = WireframeColorRawTokens.colorOpacityWhite120,
    override val surfaceInverseLowLight: Color = WireframeColorRawTokens.colorFunctionalGrayDark720,
    override val surfacePrimaryDark: Color = WireframeColorRawTokens.colorOpacityWhite40,
    override val surfacePrimaryLight: Color = ColorRawTokens.colorFunctionalWhite,
    override val surfaceSecondaryDark: Color = WireframeColorRawTokens.colorOpacityWhite80,
    override val surfaceSecondaryLight: Color = WireframeColorRawTokens.colorOpacityBlack40,
    override val surfaceStatusAccentEmphasizedDark: Color = WireframeColorRawTokens.colorRustyRed300,
    override val surfaceStatusAccentEmphasizedLight: Color = WireframeColorRawTokens.colorRustyRed600,
    override val surfaceStatusAccentMutedDark: Color = WireframeColorRawTokens.colorOpacityRustyRed680,
    override val surfaceStatusAccentMutedLight: Color = WireframeColorRawTokens.colorOpacityRustyRed80,
    override val surfaceStatusInfoEmphasizedDark: Color = ColorRawTokens.colorFunctionalDodgerBlue300,
    override val surfaceStatusInfoEmphasizedLight: Color = ColorRawTokens.colorFunctionalDodgerBlue700,
    override val surfaceStatusInfoMutedDark: Color = ColorRawTokens.colorOpacityDodgerBlue520,
    override val surfaceStatusInfoMutedLight: Color = ColorRawTokens.colorOpacityDodgerBlue80,
    override val surfaceStatusNegativeEmphasizedDark: Color = ColorRawTokens.colorFunctionalScarlet300,
    override val surfaceStatusNegativeEmphasizedLight: Color = ColorRawTokens.colorFunctionalScarlet600,
    override val surfaceStatusNegativeMutedDark: Color = ColorRawTokens.colorOpacityScarlet320,
    override val surfaceStatusNegativeMutedLight: Color = ColorRawTokens.colorOpacityScarlet80,
    override val surfaceStatusPositiveEmphasizedDark: Color = ColorRawTokens.colorFunctionalMalachite300,
    override val surfaceStatusPositiveEmphasizedLight: Color = ColorRawTokens.colorFunctionalMalachite750,
    override val surfaceStatusPositiveMutedDark: Color = ColorRawTokens.colorOpacityMalachite640,
    override val surfaceStatusPositiveMutedLight: Color = ColorRawTokens.colorOpacityMalachite120,
    override val surfaceStatusWarningEmphasizedDark: Color = ColorRawTokens.colorFunctionalSun300,
    override val surfaceStatusWarningEmphasizedLight: Color = ColorRawTokens.colorFunctionalSun500,
    override val surfaceStatusWarningMutedDark: Color = ColorRawTokens.colorOpacitySun480,
    override val surfaceStatusWarningMutedLight: Color = ColorRawTokens.colorOpacitySun160,
    override val surfaceTertiaryDark: Color = WireframeColorRawTokens.colorOpacityRustyRed680,
    override val surfaceTertiaryLight: Color = WireframeColorRawTokens.colorOpacityRustyRed80
) : OudsColorSurfaceSemanticTokens
