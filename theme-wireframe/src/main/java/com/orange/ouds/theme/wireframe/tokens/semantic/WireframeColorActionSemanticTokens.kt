//
// Software Name: OUDS Android
// SPDX-FileCopyrightText: Copyright (c) Orange SA
// SPDX-License-Identifier: MIT
//
// This software is distributed under the MIT license,
// the text of which is available at https://opensource.org/license/MIT/
// or see the "LICENSE" file for more details.
//
// Software description: Android library of reusable graphical components
//

// Wireframe brand tokens version 2.1.0
// Generated by Tokenator

package com.orange.ouds.theme.wireframe.tokens.semantic

import androidx.compose.ui.graphics.Color
import com.orange.ouds.theme.wireframe.tokens.raw.WireframeColorRawTokens
import com.orange.ouds.theme.tokens.semantic.OudsColorActionSemanticTokens
import com.orange.ouds.tokens.raw.ColorRawTokens

data class WireframeColorActionSemanticTokens(
    override val actionDisabledDark: Color = WireframeColorRawTokens.colorOpacityWhite200,
    override val actionDisabledLight: Color = WireframeColorRawTokens.colorOpacityBlack200,
    override val actionEnabledDark: Color = WireframeColorRawTokens.colorRoyalBlue300,
    override val actionEnabledLight: Color = WireframeColorRawTokens.colorRoyalBlue600,
    override val actionFocusDark: Color = WireframeColorRawTokens.colorRoyalBlue200,
    override val actionFocusLight: Color = WireframeColorRawTokens.colorRoyalBlue800,
    override val actionHighlightedDark: Color = WireframeColorRawTokens.colorFunctionalGrayLight160,
    override val actionHighlightedLight: Color = WireframeColorRawTokens.colorRoyalBlue800,
    override val actionHoverDark: Color = WireframeColorRawTokens.colorRoyalBlue200,
    override val actionHoverLight: Color = WireframeColorRawTokens.colorRoyalBlue800,
    override val actionLoadingDark: Color = WireframeColorRawTokens.colorRoyalBlue100,
    override val actionLoadingLight: Color = WireframeColorRawTokens.colorRoyalBlue900,
    override val actionNegativeEnabledDark: Color = ColorRawTokens.colorFunctionalScarlet300,
    override val actionNegativeEnabledLight: Color = ColorRawTokens.colorFunctionalScarlet600,
    override val actionNegativeFocusDark: Color = ColorRawTokens.colorFunctionalScarlet200,
    override val actionNegativeFocusLight: Color = ColorRawTokens.colorFunctionalScarlet700,
    override val actionNegativeHoverDark: Color = ColorRawTokens.colorFunctionalScarlet200,
    override val actionNegativeHoverLight: Color = ColorRawTokens.colorFunctionalScarlet700,
    override val actionNegativeLoadingDark: Color = ColorRawTokens.colorFunctionalScarlet100,
    override val actionNegativeLoadingLight: Color = ColorRawTokens.colorFunctionalScarlet800,
    override val actionNegativePressedDark: Color = ColorRawTokens.colorFunctionalScarlet100,
    override val actionNegativePressedLight: Color = ColorRawTokens.colorFunctionalScarlet800,
    override val actionPressedDark: Color = WireframeColorRawTokens.colorRoyalBlue100,
    override val actionPressedLight: Color = WireframeColorRawTokens.colorRoyalBlue900,
    override val actionSelectedDark: Color = WireframeColorRawTokens.colorRoyalBlue300,
    override val actionSelectedLight: Color = WireframeColorRawTokens.colorRoyalBlue600,
    override val actionSupportDisabledDark: Color = WireframeColorRawTokens.colorOpacityWhite40,
    override val actionSupportDisabledLight: Color = WireframeColorRawTokens.colorOpacityBlack40,
    override val actionSupportEnabledDark: Color = WireframeColorRawTokens.colorOpacityWhite40,
    override val actionSupportEnabledLight: Color = WireframeColorRawTokens.colorOpacityBlack40,
    override val actionSupportFocusDark: Color = WireframeColorRawTokens.colorOpacityWhite80,
    override val actionSupportFocusLight: Color = WireframeColorRawTokens.colorOpacityBlack80,
    override val actionSupportHoverDark: Color = WireframeColorRawTokens.colorOpacityWhite80,
    override val actionSupportHoverLight: Color = WireframeColorRawTokens.colorOpacityBlack80,
    override val actionSupportLoadingDark: Color = WireframeColorRawTokens.colorOpacityWhite120,
    override val actionSupportLoadingLight: Color = WireframeColorRawTokens.colorOpacityBlack120,
    override val actionSupportPressedDark: Color = WireframeColorRawTokens.colorOpacityWhite120,
    override val actionSupportPressedLight: Color = WireframeColorRawTokens.colorOpacityBlack120,
    override val actionVisitedDark: Color = ColorRawTokens.colorFunctionalAmethyst400,
    override val actionVisitedLight: Color = ColorRawTokens.colorFunctionalAmethyst600
) : OudsColorActionSemanticTokens
