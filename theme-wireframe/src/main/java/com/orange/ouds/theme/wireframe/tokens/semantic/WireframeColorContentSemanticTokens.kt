//
// Software Name: OUDS Android
// SPDX-FileCopyrightText: Copyright (c) Orange SA
// SPDX-License-Identifier: MIT
//
// This software is distributed under the MIT license,
// the text of which is available at https://opensource.org/license/MIT/
// or see the "LICENSE" file for more details.
//
// Software description: Android library of reusable graphical components
//

// Wireframe brand tokens version 1.5.0
// Generated by Tokenator

package com.orange.ouds.theme.wireframe.tokens.semantic

import androidx.compose.ui.graphics.Color
import com.orange.ouds.theme.tokens.semantic.OudsColorContentSemanticTokens
import com.orange.ouds.tokens.raw.ColorRawTokens

data class WireframeColorContentSemanticTokens(
    override val contentBrandPrimaryDark: Color = WframeColorRawTokens.colorRoyalBlue300,
    override val contentBrandPrimaryLight: Color = WframeColorRawTokens.colorRoyalBlue600,
    override val contentBrandSecondaryDark: Color = WframeColorRawTokens.colorRustyRed400,
    override val contentBrandSecondaryLight: Color = WframeColorRawTokens.colorRustyRed600,
    override val contentBrandTertiaryDark: Color = Color(0x00ff0000),
    override val contentBrandTertiaryLight: Color = Color(0x00ff0000),
    override val contentDefaultDark: Color = WframeColorRawTokens.colorFunctionalGrayLight160,
    override val contentDefaultLight: Color = WframeColorRawTokens.colorFunctionalGrayDark960,
    override val contentDisabledDark: Color = WframeColorRawTokens.colorOpacityWhite200,
    override val contentDisabledLight: Color = WframeColorRawTokens.colorOpacityBlack200,
    override val contentMutedDark: Color = WframeColorRawTokens.colorOpacityWhite640,
    override val contentMutedLight: Color = WframeColorRawTokens.colorOpacityBlack680,
    override val contentOnActionDisabledDark: Color = WframeColorRawTokens.colorFunctionalGrayDark960,
    override val contentOnActionDisabledLight: Color = ColorRawTokens.colorFunctionalWhite,
    override val contentOnActionEnabledDark: Color = WframeColorRawTokens.colorFunctionalGrayDark960,
    override val contentOnActionEnabledLight: Color = ColorRawTokens.colorFunctionalWhite,
    override val contentOnActionFocusDark: Color = WframeColorRawTokens.colorFunctionalGrayDark960,
    override val contentOnActionFocusLight: Color = ColorRawTokens.colorFunctionalWhite,
    override val contentOnActionHighlightedDark: Color = WframeColorRawTokens.colorFunctionalGrayDark960,
    override val contentOnActionHighlightedLight: Color = ColorRawTokens.colorFunctionalWhite,
    override val contentOnActionHoverDark: Color = WframeColorRawTokens.colorFunctionalGrayDark960,
    override val contentOnActionHoverLight: Color = ColorRawTokens.colorFunctionalWhite,
    override val contentOnActionLoadingDark: Color = WframeColorRawTokens.colorFunctionalGrayDark960,
    override val contentOnActionLoadingLight: Color = ColorRawTokens.colorFunctionalWhite,
    override val contentOnActionPressedDark: Color = WframeColorRawTokens.colorFunctionalGrayDark960,
    override val contentOnActionPressedLight: Color = ColorRawTokens.colorFunctionalWhite,
    override val contentOnActionSelectedDark: Color = WframeColorRawTokens.colorFunctionalGrayDark960,
    override val contentOnActionSelectedLight: Color = ColorRawTokens.colorFunctionalWhite,
    override val contentOnBrandPrimaryDark: Color = WframeColorRawTokens.colorFunctionalGrayDark960,
    override val contentOnBrandPrimaryLight: Color = ColorRawTokens.colorFunctionalWhite,
    override val contentOnBrandSecondaryDark: Color = WframeColorRawTokens.colorFunctionalGrayDark960,
    override val contentOnBrandSecondaryLight: Color = ColorRawTokens.colorFunctionalWhite,
    override val contentOnBrandTertiaryDark: Color = Color(0x00ff0000),
    override val contentOnBrandTertiaryLight: Color = Color(0x00ff0000),
    override val contentOnOverlayEmphasizedDark: Color = WframeColorRawTokens.colorFunctionalGrayDark960,
    override val contentOnOverlayEmphasizedLight: Color = ColorRawTokens.colorFunctionalWhite,
    override val contentOnStatusAccentEmphasizedDark: Color = WframeColorRawTokens.colorFunctionalGrayDark960,
    override val contentOnStatusAccentEmphasizedLight: Color = ColorRawTokens.colorFunctionalWhite,
    override val contentOnStatusAccentMutedDark: Color = WframeColorRawTokens.colorFunctionalGrayLight160,
    override val contentOnStatusAccentMutedLight: Color = WframeColorRawTokens.colorFunctionalGrayDark960,
    override val contentOnStatusInfoEmphasizedDark: Color = WframeColorRawTokens.colorFunctionalGrayDark960,
    override val contentOnStatusInfoEmphasizedLight: Color = WframeColorRawTokens.colorFunctionalGrayDark960,
    override val contentOnStatusInfoMutedDark: Color = WframeColorRawTokens.colorFunctionalGrayLight160,
    override val contentOnStatusInfoMutedLight: Color = WframeColorRawTokens.colorFunctionalGrayDark960,
    override val contentOnStatusNegativeEmphasizedDark: Color = WframeColorRawTokens.colorFunctionalGrayDark960,
    override val contentOnStatusNegativeEmphasizedLight: Color = ColorRawTokens.colorFunctionalWhite,
    override val contentOnStatusNegativeMutedDark: Color = WframeColorRawTokens.colorFunctionalGrayLight160,
    override val contentOnStatusNegativeMutedLight: Color = WframeColorRawTokens.colorFunctionalGrayDark960,
    override val contentOnStatusNeutralEmphasizedDark: Color = WframeColorRawTokens.colorFunctionalGrayDark960,
    override val contentOnStatusNeutralEmphasizedLight: Color = ColorRawTokens.colorFunctionalWhite,
    override val contentOnStatusNeutralMutedDark: Color = WframeColorRawTokens.colorFunctionalGrayLight160,
    override val contentOnStatusNeutralMutedLight: Color = WframeColorRawTokens.colorFunctionalGrayDark960,
    override val contentOnStatusPositiveEmphasizedDark: Color = WframeColorRawTokens.colorFunctionalGrayDark960,
    override val contentOnStatusPositiveEmphasizedLight: Color = WframeColorRawTokens.colorFunctionalGrayDark960,
    override val contentOnStatusPositiveMutedDark: Color = WframeColorRawTokens.colorFunctionalGrayLight160,
    override val contentOnStatusPositiveMutedLight: Color = WframeColorRawTokens.colorFunctionalGrayDark960,
    override val contentOnStatusWarningEmphasizedDark: Color = WframeColorRawTokens.colorFunctionalGrayDark960,
    override val contentOnStatusWarningEmphasizedLight: Color = WframeColorRawTokens.colorFunctionalGrayDark960,
    override val contentOnStatusWarningMutedDark: Color = WframeColorRawTokens.colorFunctionalGrayLight160,
    override val contentOnStatusWarningMutedLight: Color = WframeColorRawTokens.colorFunctionalGrayDark960,
    override val contentStatusAccentDark: Color = WframeColorRawTokens.colorRustyRed300,
    override val contentStatusAccentLight: Color = WframeColorRawTokens.colorRustyRed600,
    override val contentStatusInfoDark: Color = ColorRawTokens.colorFunctionalDodgerBlue300,
    override val contentStatusInfoLight: Color = ColorRawTokens.colorFunctionalDodgerBlue500,
    override val contentStatusNegativeDark: Color = ColorRawTokens.colorFunctionalScarlet300,
    override val contentStatusNegativeLight: Color = ColorRawTokens.colorFunctionalScarlet600,
    override val contentStatusPositiveDark: Color = ColorRawTokens.colorFunctionalMalachite300,
    override val contentStatusPositiveLight: Color = ColorRawTokens.colorFunctionalMalachite500,
    override val contentStatusWarningDark: Color = ColorRawTokens.colorFunctionalSun300,
    override val contentStatusWarningLight: Color = ColorRawTokens.colorFunctionalSun500
) : OudsColorContentSemanticTokens
