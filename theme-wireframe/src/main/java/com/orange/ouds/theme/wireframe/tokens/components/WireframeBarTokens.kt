//
// Software Name: OUDS Android
// SPDX-FileCopyrightText: Copyright (c) Orange SA
// SPDX-License-Identifier: MIT
//
// This software is distributed under the MIT license,
// the text of which is available at https://opensource.org/license/MIT/
// or see the "LICENSE" file for more details.
//
// Software description: Android library of reusable graphical components
//

// Wireframe brand tokens version 2.1.0
// Generated by Tokenator

package com.orange.ouds.theme.wireframe.tokens.components

import androidx.compose.ui.graphics.Color
import com.orange.ouds.theme.tokens.OudsBorderKeyToken
import com.orange.ouds.theme.tokens.OudsColorKeyToken
import com.orange.ouds.theme.tokens.OudsLightDarkColorKeyToken
import com.orange.ouds.theme.tokens.OudsOpacityKeyToken
import com.orange.ouds.theme.tokens.components.OudsBarTokens
import com.orange.ouds.theme.tokens.components.OudsLightDarkColorToken
import com.orange.ouds.tokens.raw.DimensionRawTokens

data class WireframeBarTokens(
    override val borderRadiusTopActiveIndicator: OudsBorderKeyToken.Radius = OudsBorderKeyToken.Radius.Default,
    override val colorBg: OudsLightDarkColorToken = OudsLightDarkColorToken(Color(0xccf7f8fa), Color(0xcc181c26)),
    override val colorBorder: OudsColorKeyToken = OudsLightDarkColorKeyToken(
        OudsColorKeyToken.Repository.Opacity.Black.Lowest,
        OudsColorKeyToken.Repository.Opacity.White.Lowest
    ),
    override val colorContentSelectedEnabled: OudsColorKeyToken = OudsColorKeyToken.Action.Selected,
    override val colorContentSelectedFocus: OudsColorKeyToken = OudsColorKeyToken.Action.Focus,
    override val colorContentSelectedHover: OudsColorKeyToken = OudsColorKeyToken.Action.Hover,
    override val colorContentSelectedPressed: OudsColorKeyToken = OudsColorKeyToken.Action.Pressed,
    override val colorContentUnselectedEnabled: OudsColorKeyToken = OudsColorKeyToken.Content.Default,
    override val colorContentUnselectedFocus: OudsColorKeyToken = OudsColorKeyToken.Action.Focus,
    override val colorContentUnselectedHover: OudsColorKeyToken = OudsColorKeyToken.Action.Hover,
    override val colorContentUnselectedPressed: OudsColorKeyToken = OudsColorKeyToken.Action.Pressed,
    override val colorMaterialActiveIndicatorSelectedEnabled: OudsColorKeyToken = OudsColorKeyToken.Action.Support.Enabled,
    override val colorMaterialActiveIndicatorSelectedFocus: OudsColorKeyToken = OudsColorKeyToken.Action.Support.Focus,
    override val colorMaterialActiveIndicatorSelectedHover: OudsColorKeyToken = OudsColorKeyToken.Action.Support.Hover,
    override val colorMaterialActiveIndicatorSelectedPressed: OudsColorKeyToken = OudsColorKeyToken.Action.Support.Pressed,
    override val colorMaterialActiveIndicatorUnselectedFocus: OudsColorKeyToken = OudsColorKeyToken.Action.Support.Focus,
    override val colorMaterialActiveIndicatorUnselectedHover: OudsColorKeyToken = OudsColorKeyToken.Action.Support.Hover,
    override val colorMaterialActiveIndicatorUnselectedPressed: OudsColorKeyToken = OudsColorKeyToken.Action.Support.Pressed,
    override val colorTopActiveIndicatorSelectedEnabled: OudsColorKeyToken = OudsColorKeyToken.Action.Selected,
    override val colorTopActiveIndicatorSelectedFocus: OudsColorKeyToken = OudsColorKeyToken.Action.Focus,
    override val colorTopActiveIndicatorSelectedHover: OudsColorKeyToken = OudsColorKeyToken.Action.Hover,
    override val colorTopActiveIndicatorSelectedPressed: OudsColorKeyToken = OudsColorKeyToken.Action.Pressed,
    override val opacityContentDefault: OudsOpacityKeyToken = OudsOpacityKeyToken.Opaque,
    override val opacityContentUnselectedEnabled: OudsOpacityKeyToken = OudsOpacityKeyToken.Medium,
    override val opacityTopActiveIndicator: OudsOpacityKeyToken = OudsOpacityKeyToken.Invisible,
    override val sizeHeightTopActiveIndicator: Float = DimensionRawTokens.dimensionOutOfSystem75,
    override val sizeWidthTopActiveIndicator: Float = DimensionRawTokens.dimension650
) : OudsBarTokens
