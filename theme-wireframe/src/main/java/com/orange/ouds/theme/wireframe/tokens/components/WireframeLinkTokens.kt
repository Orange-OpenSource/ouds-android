//
// Software Name: OUDS Android
// SPDX-FileCopyrightText: Copyright (c) Orange SA
// SPDX-License-Identifier: MIT
//
// This software is distributed under the MIT license,
// the text of which is available at https://opensource.org/license/MIT/
// or see the "LICENSE" file for more details.
//
// Software description: Android library of reusable graphical components
//

// Wireframe brand tokens version 2.0.0
// Generated by Tokenator

package com.orange.ouds.theme.wireframe.tokens.components

import com.orange.ouds.theme.tokens.components.OudsLinkTokens
import com.orange.ouds.theme.tokens.OudsColorKeyToken
import com.orange.ouds.theme.tokens.OudsSizeKeyToken
import com.orange.ouds.theme.tokens.OudsSpaceKeyToken
import com.orange.ouds.tokens.raw.DimensionRawTokens

data class WireframeLinkTokens(
    override val colorChevronEnabled: OudsColorKeyToken = OudsColorKeyToken.Action.Enabled,
    override val colorChevronFocus: OudsColorKeyToken = OudsColorKeyToken.Action.Focus,
    override val colorChevronHover: OudsColorKeyToken = OudsColorKeyToken.Action.Hover,
    override val colorChevronPressed: OudsColorKeyToken = OudsColorKeyToken.Action.Pressed,
    override val colorContentEnabled: OudsColorKeyToken = OudsColorKeyToken.Action.Enabled,
    override val colorContentFocus: OudsColorKeyToken = OudsColorKeyToken.Action.Focus,
    override val colorContentHover: OudsColorKeyToken = OudsColorKeyToken.Action.Hover,
    override val colorContentPressed: OudsColorKeyToken = OudsColorKeyToken.Action.Pressed,
    override val sizeIconDefault: OudsSizeKeyToken.Icon = OudsSizeKeyToken.Icon.WithLabel.Large.SizeExtraSmall,
    override val sizeIconSmall: OudsSizeKeyToken.Icon = OudsSizeKeyToken.Icon.WithLabel.Medium.SizeSmall,
    override val sizeMinHeightDefault: OudsSizeKeyToken = OudsSizeKeyToken.MinInteractiveArea,
    override val sizeMinHeightSmall: Float = DimensionRawTokens.dimension550,
    override val sizeMinWidthDefault: OudsSizeKeyToken = OudsSizeKeyToken.MinInteractiveArea,
    override val sizeMinWidthSmall: Float = DimensionRawTokens.dimension550,
    override val spaceColumnGapChevronDefault: OudsSpaceKeyToken.ColumnGap = OudsSpaceKeyToken.ColumnGap.TwoExtraSmall,
    override val spaceColumnGapChevronSmall: OudsSpaceKeyToken.ColumnGap = OudsSpaceKeyToken.ColumnGap.TwoExtraSmall,
    override val spaceColumnGapIconDefault: OudsSpaceKeyToken.ColumnGap = OudsSpaceKeyToken.ColumnGap.Small,
    override val spaceColumnGapIconSmall: OudsSpaceKeyToken.ColumnGap = OudsSpaceKeyToken.ColumnGap.ExtraSmall,
    override val spacePaddingBlock: OudsSpaceKeyToken.PaddingBlock = OudsSpaceKeyToken.PaddingBlock.Medium,
    override val spacePaddingInline: OudsSpaceKeyToken.PaddingInline = OudsSpaceKeyToken.PaddingInline.None
) : OudsLinkTokens
