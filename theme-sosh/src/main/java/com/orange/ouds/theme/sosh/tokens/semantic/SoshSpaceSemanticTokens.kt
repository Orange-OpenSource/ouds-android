//
// Software Name: OUDS Android
// SPDX-FileCopyrightText: Copyright (c) Orange SA
// SPDX-License-Identifier: MIT
//
// This software is distributed under the MIT license,
// the text of which is available at https://opensource.org/license/MIT/
// or see the "LICENSE" file for more details.
//
// Software description: Android library of reusable graphical components
//

// OUDS Core tokens version 1.3.0
//
// Android Core tokens version 1.0.0
// Android System tokens version 1.0.0
//
// Orange Core tokens version 1.1.0
// Orange Brand tokens version 1.3.0
//
// Generated by Tokenator

package com.orange.ouds.theme.sosh.tokens.semantic

import com.orange.ouds.theme.tokens.semantic.OudsSpaceSemanticTokens
import com.orange.ouds.tokens.raw.DimensionRawTokens

data class SoshSpaceSemanticTokens(
    override val columnGap2xl: Float = DimensionRawTokens.dimension300,
    override val columnGap2xs: Float = DimensionRawTokens.dimension50,
    override val columnGap3xs: Float = DimensionRawTokens.dimensionOutOfSystem50,
    override val columnGapLg: Float = DimensionRawTokens.dimension200,
    override val columnGapMd: Float = DimensionRawTokens.dimension150,
    override val columnGapNone: Float = DimensionRawTokens.dimension0,
    override val columnGapSm: Float = DimensionRawTokens.dimension100,
    override val columnGapXl: Float = DimensionRawTokens.dimension250,
    override val columnGapXs: Float = DimensionRawTokens.dimensionOutOfSystem150,
    override val fixed2xl: Float = DimensionRawTokens.dimension500,
    override val fixed2xs: Float = DimensionRawTokens.dimension50,
    override val fixed3xl: Float = DimensionRawTokens.dimension600,
    override val fixed3xs: Float = DimensionRawTokens.dimensionOutOfSystem50,
    override val fixed4xl: Float = DimensionRawTokens.dimension700,
    override val fixed5xl: Float = DimensionRawTokens.dimension800,
    override val fixedLg: Float = DimensionRawTokens.dimension300,
    override val fixedMd: Float = DimensionRawTokens.dimension200,
    override val fixedNone: Float = DimensionRawTokens.dimension0,
    override val fixedSm: Float = DimensionRawTokens.dimension150,
    override val fixedXl: Float = DimensionRawTokens.dimension400,
    override val fixedXs: Float = DimensionRawTokens.dimension100,
    override val inset2xl: Float = DimensionRawTokens.dimension400,
    override val inset2xs: Float = DimensionRawTokens.dimension50,
    override val inset3xl: Float = DimensionRawTokens.dimension500,
    override val inset3xs: Float = DimensionRawTokens.dimensionOutOfSystem50,
    override val inset4xs: Float = DimensionRawTokens.dimensionOutOfSystem25,
    override val insetLg: Float = DimensionRawTokens.dimension200,
    override val insetMd: Float = DimensionRawTokens.dimension150,
    override val insetNone: Float = DimensionRawTokens.dimension0,
    override val insetSm: Float = DimensionRawTokens.dimension100,
    override val insetXl: Float = DimensionRawTokens.dimension300,
    override val insetXs: Float = DimensionRawTokens.dimensionOutOfSystem150,
    override val paddingBlock2xl: Float = DimensionRawTokens.dimension300,
    override val paddingBlock2xs: Float = DimensionRawTokens.dimensionOutOfSystem150,
    override val paddingBlock3xl: Float = DimensionRawTokens.dimension350,
    override val paddingBlock3xs: Float = DimensionRawTokens.dimension50,
    override val paddingBlock4xl: Float = DimensionRawTokens.dimension400,
    override val paddingBlock4xs: Float = DimensionRawTokens.dimensionOutOfSystem50,
    override val paddingBlockLg: Float = DimensionRawTokens.dimension200,
    override val paddingBlockMd: Float = DimensionRawTokens.dimension150,
    override val paddingBlockNone: Float = DimensionRawTokens.dimension0,
    override val paddingBlockSm: Float = DimensionRawTokens.dimensionOutOfSystem250,
    override val paddingBlockXl: Float = DimensionRawTokens.dimension250,
    override val paddingBlockXs: Float = DimensionRawTokens.dimension100,
    override val paddingInline2xl: Float = DimensionRawTokens.dimension300,
    override val paddingInline2xs: Float = DimensionRawTokens.dimensionOutOfSystem150,
    override val paddingInline3xl: Float = DimensionRawTokens.dimension350,
    override val paddingInline3xs: Float = DimensionRawTokens.dimension50,
    override val paddingInline4xl: Float = DimensionRawTokens.dimension400,
    override val paddingInline4xs: Float = DimensionRawTokens.dimensionOutOfSystem50,
    override val paddingInlineLg: Float = DimensionRawTokens.dimension200,
    override val paddingInlineMd: Float = DimensionRawTokens.dimension150,
    override val paddingInlineNone: Float = DimensionRawTokens.dimension0,
    override val paddingInlineSm: Float = DimensionRawTokens.dimensionOutOfSystem250,
    override val paddingInlineXl: Float = DimensionRawTokens.dimension250,
    override val paddingInlineXs: Float = DimensionRawTokens.dimension100,
    override val rowGap2xs: Float = DimensionRawTokens.dimension50,
    override val rowGap3xs: Float = DimensionRawTokens.dimensionOutOfSystem50,
    override val rowGapLg: Float = DimensionRawTokens.dimension200,
    override val rowGapMd: Float = DimensionRawTokens.dimension150,
    override val rowGapNone: Float = DimensionRawTokens.dimension0,
    override val rowGapSm: Float = DimensionRawTokens.dimension100,
    override val rowGapXs: Float = DimensionRawTokens.dimensionOutOfSystem150,
    override val scaled2xlMobile: Float = DimensionRawTokens.dimension500,
    override val scaled2xlTablet: Float = DimensionRawTokens.dimension600,
    override val scaled2xsMobile: Float = DimensionRawTokens.dimension50,
    override val scaled2xsTablet: Float = DimensionRawTokens.dimension100,
    override val scaled3xlMobile: Float = DimensionRawTokens.dimension600,
    override val scaled3xlTablet: Float = DimensionRawTokens.dimension700,
    override val scaled3xsMobile: Float = DimensionRawTokens.dimensionOutOfSystem50,
    override val scaled3xsTablet: Float = DimensionRawTokens.dimension50,
    override val scaledLgMobile: Float = DimensionRawTokens.dimension300,
    override val scaledLgTablet: Float = DimensionRawTokens.dimension400,
    override val scaledMdMobile: Float = DimensionRawTokens.dimension200,
    override val scaledMdTablet: Float = DimensionRawTokens.dimension300,
    override val scaledNoneMobile: Float = DimensionRawTokens.dimension0,
    override val scaledNoneTablet: Float = DimensionRawTokens.dimension0,
    override val scaledSmMobile: Float = DimensionRawTokens.dimension150,
    override val scaledSmTablet: Float = DimensionRawTokens.dimension200,
    override val scaledXlMobile: Float = DimensionRawTokens.dimension400,
    override val scaledXlTablet: Float = DimensionRawTokens.dimension500,
    override val scaledXsMobile: Float = DimensionRawTokens.dimension100,
    override val scaledXsTablet: Float = DimensionRawTokens.dimension150
) : OudsSpaceSemanticTokens
