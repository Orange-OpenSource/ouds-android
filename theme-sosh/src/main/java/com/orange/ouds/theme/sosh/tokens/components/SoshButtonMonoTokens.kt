//
// Software Name: OUDS Android
// SPDX-FileCopyrightText: Copyright (c) Orange SA
// SPDX-License-Identifier: MIT
//
// This software is distributed under the MIT license,
// the text of which is available at https://opensource.org/license/MIT/
// or see the "LICENSE" file for more details.
//
// Software description: Android library of reusable graphical components
//

// Sosh brand tokens version 1.2.0
// Generated by Tokenator

package com.orange.ouds.theme.sosh.tokens.components

import com.orange.ouds.theme.tokens.components.OudsButtonMonoTokens
import com.orange.ouds.theme.tokens.OudsColorKeyToken
import com.orange.ouds.theme.tokens.OudsLightDarkColorKeyToken

data class SoshButtonMonoTokens(
    override val colorBgDefaultDisabled: OudsColorKeyToken = OudsColorKeyToken.Opacity.Transparent,
    override val colorBgDefaultEnabled: OudsColorKeyToken = OudsColorKeyToken.Opacity.Transparent,
    override val colorBgDefaultFocus: OudsColorKeyToken = OudsLightDarkColorKeyToken(OudsColorKeyToken.Repository.Opacity.Black.Higher, OudsColorKeyToken.Repository.Opacity.White.Higher),
    override val colorBgDefaultHover: OudsColorKeyToken = OudsLightDarkColorKeyToken(OudsColorKeyToken.Repository.Opacity.Black.Higher, OudsColorKeyToken.Repository.Opacity.White.Higher),
    override val colorBgDefaultLoading: OudsColorKeyToken = OudsLightDarkColorKeyToken(OudsColorKeyToken.Repository.Opacity.White.Higher, OudsColorKeyToken.Repository.Opacity.Black.Higher),
    override val colorBgDefaultPressed: OudsColorKeyToken = OudsLightDarkColorKeyToken(OudsColorKeyToken.Repository.Opacity.White.Higher, OudsColorKeyToken.Repository.Opacity.Black.Higher),
    override val colorBgMinimalDisabled: OudsColorKeyToken = OudsColorKeyToken.Opacity.Transparent,
    override val colorBgMinimalEnabled: OudsColorKeyToken = OudsColorKeyToken.Opacity.Transparent,
    override val colorBgMinimalFocus: OudsColorKeyToken = OudsLightDarkColorKeyToken(OudsColorKeyToken.Repository.Opacity.Black.Higher, OudsColorKeyToken.Repository.Opacity.White.Higher),
    override val colorBgMinimalHover: OudsColorKeyToken = OudsLightDarkColorKeyToken(OudsColorKeyToken.Repository.Opacity.Black.Higher, OudsColorKeyToken.Repository.Opacity.White.Higher),
    override val colorBgMinimalLoading: OudsColorKeyToken = OudsLightDarkColorKeyToken(OudsColorKeyToken.Repository.Opacity.White.Higher, OudsColorKeyToken.Repository.Opacity.Black.Higher),
    override val colorBgMinimalPressed: OudsColorKeyToken = OudsLightDarkColorKeyToken(OudsColorKeyToken.Repository.Opacity.White.Higher, OudsColorKeyToken.Repository.Opacity.Black.Higher),
    override val colorBgStrongDisabled: OudsColorKeyToken = OudsLightDarkColorKeyToken(OudsColorKeyToken.Repository.Opacity.Black.Medium, OudsColorKeyToken.Repository.Opacity.White.Medium),
    override val colorBgStrongEnabled: OudsColorKeyToken = OudsLightDarkColorKeyToken(OudsColorKeyToken.Repository.Neutral.Emphasized.Black, OudsColorKeyToken.Repository.Neutral.Muted.White),
    override val colorBgStrongFocus: OudsColorKeyToken = OudsLightDarkColorKeyToken(OudsColorKeyToken.Repository.Opacity.Black.Higher, OudsColorKeyToken.Repository.Opacity.White.Higher),
    override val colorBgStrongHover: OudsColorKeyToken = OudsLightDarkColorKeyToken(OudsColorKeyToken.Repository.Opacity.Black.Higher, OudsColorKeyToken.Repository.Opacity.White.Higher),
    override val colorBgStrongLoading: OudsColorKeyToken = OudsLightDarkColorKeyToken(OudsColorKeyToken.Repository.Opacity.White.Higher, OudsColorKeyToken.Repository.Opacity.Black.Higher),
    override val colorBgStrongPressed: OudsColorKeyToken = OudsLightDarkColorKeyToken(OudsColorKeyToken.Repository.Opacity.White.Higher, OudsColorKeyToken.Repository.Opacity.Black.Higher),
    override val colorBorderDefaultDisabled: OudsColorKeyToken = OudsLightDarkColorKeyToken(OudsColorKeyToken.Repository.Opacity.Black.Medium, OudsColorKeyToken.Repository.Opacity.White.Medium),
    override val colorBorderDefaultEnabled: OudsColorKeyToken = OudsLightDarkColorKeyToken(OudsColorKeyToken.Repository.Neutral.Emphasized.Black, OudsColorKeyToken.Repository.Neutral.Muted.White),
    override val colorBorderDefaultFocus: OudsColorKeyToken = OudsColorKeyToken.Opacity.Transparent,
    override val colorBorderDefaultHover: OudsColorKeyToken = OudsColorKeyToken.Opacity.Transparent,
    override val colorBorderDefaultLoading: OudsColorKeyToken = OudsColorKeyToken.Opacity.Transparent,
    override val colorBorderDefaultPressed: OudsColorKeyToken = OudsColorKeyToken.Opacity.Transparent,
    override val colorBorderMinimalDisabled: OudsColorKeyToken = OudsColorKeyToken.Opacity.Transparent,
    override val colorBorderMinimalEnabled: OudsColorKeyToken = OudsColorKeyToken.Opacity.Transparent,
    override val colorBorderMinimalFocus: OudsColorKeyToken = OudsColorKeyToken.Opacity.Transparent,
    override val colorBorderMinimalHover: OudsColorKeyToken = OudsColorKeyToken.Opacity.Transparent,
    override val colorBorderMinimalLoading: OudsColorKeyToken = OudsColorKeyToken.Opacity.Transparent,
    override val colorBorderMinimalPressed: OudsColorKeyToken = OudsColorKeyToken.Opacity.Transparent,
    override val colorBorderStrongDisabled: OudsColorKeyToken = OudsColorKeyToken.Opacity.Transparent,
    override val colorBorderStrongEnabled: OudsColorKeyToken = OudsColorKeyToken.Opacity.Transparent,
    override val colorBorderStrongFocus: OudsColorKeyToken = OudsColorKeyToken.Opacity.Transparent,
    override val colorBorderStrongHover: OudsColorKeyToken = OudsColorKeyToken.Opacity.Transparent,
    override val colorBorderStrongLoading: OudsColorKeyToken = OudsColorKeyToken.Opacity.Transparent,
    override val colorBorderStrongPressed: OudsColorKeyToken = OudsColorKeyToken.Opacity.Transparent,
    override val colorContentDefaultDisabled: OudsColorKeyToken = OudsLightDarkColorKeyToken(OudsColorKeyToken.Repository.Opacity.Black.Medium, OudsColorKeyToken.Repository.Opacity.White.Medium),
    override val colorContentDefaultEnabled: OudsColorKeyToken = OudsLightDarkColorKeyToken(OudsColorKeyToken.Repository.Neutral.Emphasized.Black, OudsColorKeyToken.Repository.Neutral.Muted.White),
    override val colorContentDefaultFocus: OudsColorKeyToken = OudsLightDarkColorKeyToken(OudsColorKeyToken.Repository.Neutral.Muted.White, OudsColorKeyToken.Repository.Neutral.Emphasized.Black),
    override val colorContentDefaultHover: OudsColorKeyToken = OudsLightDarkColorKeyToken(OudsColorKeyToken.Repository.Neutral.Muted.White, OudsColorKeyToken.Repository.Neutral.Emphasized.Black),
    override val colorContentDefaultLoading: OudsColorKeyToken = OudsLightDarkColorKeyToken(OudsColorKeyToken.Repository.Neutral.Emphasized.Black, OudsColorKeyToken.Repository.Neutral.Muted.White),
    override val colorContentDefaultPressed: OudsColorKeyToken = OudsLightDarkColorKeyToken(OudsColorKeyToken.Repository.Neutral.Emphasized.Black, OudsColorKeyToken.Repository.Neutral.Muted.White),
    override val colorContentMinimalDisabled: OudsColorKeyToken = OudsLightDarkColorKeyToken(OudsColorKeyToken.Repository.Opacity.Black.Medium, OudsColorKeyToken.Repository.Opacity.White.Medium),
    override val colorContentMinimalEnabled: OudsColorKeyToken = OudsLightDarkColorKeyToken(OudsColorKeyToken.Repository.Neutral.Emphasized.Black, OudsColorKeyToken.Repository.Neutral.Muted.White),
    override val colorContentMinimalFocus: OudsColorKeyToken = OudsLightDarkColorKeyToken(OudsColorKeyToken.Repository.Neutral.Muted.White, OudsColorKeyToken.Repository.Neutral.Emphasized.Black),
    override val colorContentMinimalHover: OudsColorKeyToken = OudsLightDarkColorKeyToken(OudsColorKeyToken.Repository.Neutral.Muted.White, OudsColorKeyToken.Repository.Neutral.Emphasized.Black),
    override val colorContentMinimalLoading: OudsColorKeyToken = OudsLightDarkColorKeyToken(OudsColorKeyToken.Repository.Neutral.Emphasized.Black, OudsColorKeyToken.Repository.Neutral.Muted.White),
    override val colorContentMinimalPressed: OudsColorKeyToken = OudsLightDarkColorKeyToken(OudsColorKeyToken.Repository.Neutral.Emphasized.Black, OudsColorKeyToken.Repository.Neutral.Muted.White),
    override val colorContentStrongDisabled: OudsColorKeyToken = OudsLightDarkColorKeyToken(OudsColorKeyToken.Repository.Opacity.White.High, OudsColorKeyToken.Repository.Opacity.Black.MediumHigh),
    override val colorContentStrongEnabled: OudsColorKeyToken = OudsLightDarkColorKeyToken(OudsColorKeyToken.Repository.Neutral.Muted.White, OudsColorKeyToken.Repository.Neutral.Emphasized.Black),
    override val colorContentStrongFocus: OudsColorKeyToken = OudsLightDarkColorKeyToken(OudsColorKeyToken.Repository.Neutral.Muted.White, OudsColorKeyToken.Repository.Neutral.Emphasized.Black),
    override val colorContentStrongHover: OudsColorKeyToken = OudsLightDarkColorKeyToken(OudsColorKeyToken.Repository.Neutral.Muted.White, OudsColorKeyToken.Repository.Neutral.Emphasized.Black),
    override val colorContentStrongLoading: OudsColorKeyToken = OudsLightDarkColorKeyToken(OudsColorKeyToken.Repository.Neutral.Emphasized.Black, OudsColorKeyToken.Repository.Neutral.Muted.White),
    override val colorContentStrongPressed: OudsColorKeyToken = OudsLightDarkColorKeyToken(OudsColorKeyToken.Repository.Neutral.Emphasized.Black, OudsColorKeyToken.Repository.Neutral.Muted.White)
) : OudsButtonMonoTokens
