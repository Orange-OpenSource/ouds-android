//
// Software Name: OUDS Android
// SPDX-FileCopyrightText: Copyright (c) Orange SA
// SPDX-License-Identifier: MIT
//
// This software is distributed under the MIT license,
// the text of which is available at https://opensource.org/license/MIT/
// or see the "LICENSE" file for more details.
//
// Software description: Android library of reusable graphical components
//

// Sosh brand tokens version 1.2.0
// Generated by Tokenator

package com.orange.ouds.theme.sosh.tokens.semantic

import androidx.compose.ui.graphics.Color
import com.orange.ouds.theme.sosh.tokens.raw.SoshColorRawTokens
import com.orange.ouds.theme.tokens.semantic.OudsColorSurfaceSemanticTokens
import com.orange.ouds.tokens.raw.ColorRawTokens

data class SoshColorSurfaceSemanticTokens(
    override val surfaceBrandPrimaryDark: Color = SoshColorRawTokens.colorMagenta300,
    override val surfaceBrandPrimaryLight: Color = SoshColorRawTokens.colorMagenta500,
    override val surfaceBrandSecondaryDark: Color = SoshColorRawTokens.colorBlueDuckLight800,
    override val surfaceBrandSecondaryLight: Color = SoshColorRawTokens.colorBlueDuckDark400,
    override val surfaceBrandTertiaryDark: Color = SoshColorRawTokens.colorCitrine300,
    override val surfaceBrandTertiaryLight: Color = SoshColorRawTokens.colorCitrine500,
    override val surfaceStatusAccentEmphasizedDark: Color = SoshColorRawTokens.colorMagenta300,
    override val surfaceStatusAccentEmphasizedLight: Color = SoshColorRawTokens.colorMagenta500,
    override val surfaceStatusAccentMutedDark: Color = SoshColorRawTokens.colorMagenta800,
    override val surfaceStatusAccentMutedLight: Color = SoshColorRawTokens.colorOpacityMagenta,
    override val surfaceStatusInfoEmphasizedDark: Color = ColorRawTokens.colorFunctionalDodgerBlue300,
    override val surfaceStatusInfoEmphasizedLight: Color = ColorRawTokens.colorFunctionalDodgerBlue500,
    override val surfaceStatusInfoMutedDark: Color = ColorRawTokens.colorFunctionalDodgerBlue900,
    override val surfaceStatusInfoMutedLight: Color = ColorRawTokens.colorOpacityDodgerBlue,
    override val surfaceStatusNegativeEmphasizedDark: Color = ColorRawTokens.colorFunctionalScarlet300,
    override val surfaceStatusNegativeEmphasizedLight: Color = ColorRawTokens.colorFunctionalScarlet600,
    override val surfaceStatusNegativeMutedDark: Color = ColorRawTokens.colorFunctionalScarlet900,
    override val surfaceStatusNegativeMutedLight: Color = ColorRawTokens.colorOpacityScarlet,
    override val surfaceStatusNeutralEmphasizedDark: Color = ColorRawTokens.colorOpacityWhite920,
    override val surfaceStatusNeutralEmphasizedLight: Color = ColorRawTokens.colorOpacityBlack840,
    override val surfaceStatusNeutralMutedDark: Color = ColorRawTokens.colorOpacityWhite80,
    override val surfaceStatusNeutralMutedLight: Color = ColorRawTokens.colorOpacityBlack40,
    override val surfaceStatusPositiveEmphasizedDark: Color = ColorRawTokens.colorFunctionalMalachite300,
    override val surfaceStatusPositiveEmphasizedLight: Color = ColorRawTokens.colorFunctionalMalachite500,
    override val surfaceStatusPositiveMutedDark: Color = ColorRawTokens.colorFunctionalMalachite900,
    override val surfaceStatusPositiveMutedLight: Color = ColorRawTokens.colorOpacityMalachite,
    override val surfaceStatusWarningEmphasizedDark: Color = ColorRawTokens.colorFunctionalSun300,
    override val surfaceStatusWarningEmphasizedLight: Color = ColorRawTokens.colorFunctionalSun500,
    override val surfaceStatusWarningMutedDark: Color = ColorRawTokens.colorFunctionalSun900,
    override val surfaceStatusWarningMutedLight: Color = ColorRawTokens.colorOpacitySun
) : OudsColorSurfaceSemanticTokens
