/*
 * Software Name: OUDS Android
 * SPDX-FileCopyrightText: Copyright (c) Orange SA
 * SPDX-License-Identifier: MIT
 *
 * This software is distributed under the MIT license,
 * the text of which is available at https://opensource.org/license/MIT/
 * or see the "LICENSE" file for more details.
 *
 * Software description: Android library of reusable graphical components
 */

package com.orange.ouds.theme.tokens.semantic

import com.orange.ouds.tokens.global.raw.DimensionRawTokens

data class OudsSpacingSemanticTokens(
    val fixedNone: Float = DimensionRawTokens.dimension0,
    val fixedSmash: Float = DimensionRawTokens.dimension25,
    val fixedShortest: Float = DimensionRawTokens.dimension50,
    val fixedShorter: Float = DimensionRawTokens.dimension100,
    val fixedShort: Float = DimensionRawTokens.dimension150,
    val fixedMedium: Float = DimensionRawTokens.dimension200,
    val fixedTall: Float = DimensionRawTokens.dimension300,
    val fixedTaller: Float = DimensionRawTokens.dimension400,
    val fixedTallest: Float = DimensionRawTokens.dimension500,
    val fixedSpacious: Float = DimensionRawTokens.dimension600,
    val fixedHuge: Float = DimensionRawTokens.dimension700,
    val fixedJumbo: Float = DimensionRawTokens.dimension800,
    val scaledDesktopMedium: Float = DimensionRawTokens.dimension400,
    val scaledDesktopNone: Float = DimensionRawTokens.dimension0,
    val scaledDesktopShort: Float = DimensionRawTokens.dimension300,
    val scaledDesktopShorter: Float = DimensionRawTokens.dimension200,
    val scaledDesktopShortest: Float = DimensionRawTokens.dimension100,
    val scaledDesktopSmash: Float = DimensionRawTokens.dimension50,
    val scaledDesktopSpacious: Float = DimensionRawTokens.dimension800,
    val scaledDesktopTall: Float = DimensionRawTokens.dimension500,
    val scaledDesktopTaller: Float = DimensionRawTokens.dimension600,
    val scaledDesktopTallest: Float = DimensionRawTokens.dimension700,
    val scaledMobileMedium: Float = DimensionRawTokens.dimension200,
    val scaledMobileNone: Float = DimensionRawTokens.dimension0,
    val scaledMobileShort: Float = DimensionRawTokens.dimension150,
    val scaledMobileShorter: Float = DimensionRawTokens.dimension100,
    val scaledMobileShortest: Float = DimensionRawTokens.dimension50,
    val scaledMobileSmash: Float = DimensionRawTokens.dimension25,
    val scaledMobileSpacious: Float = DimensionRawTokens.dimension600,
    val scaledMobileTall: Float = DimensionRawTokens.dimension300,
    val scaledMobileTaller: Float = DimensionRawTokens.dimension400,
    val scaledMobileTallest: Float = DimensionRawTokens.dimension500,
    val scaledTabletMedium: Float = DimensionRawTokens.dimension300,
    val scaledTabletNone: Float = DimensionRawTokens.dimension0,
    val scaledTabletShort: Float = DimensionRawTokens.dimension200,
    val scaledTabletShorter: Float = DimensionRawTokens.dimension150,
    val scaledTabletShortest: Float = DimensionRawTokens.dimension100,
    val scaledTabletSmash: Float = DimensionRawTokens.dimension50,
    val scaledTabletSpacious: Float = DimensionRawTokens.dimension700,
    val scaledTabletTall: Float = DimensionRawTokens.dimension400,
    val scaledTabletTaller: Float = DimensionRawTokens.dimension500,
    val scaledTabletTallest: Float = DimensionRawTokens.dimension600,
    val paddingInlineNone: Float = DimensionRawTokens.dimension0,
    val paddingInlineShorter: Float = DimensionRawTokens.dimension50,
    val paddingInlineShort: Float = DimensionRawTokens.dimension100,
    val paddingInlineMedium: Float = DimensionRawTokens.dimension200,
    val paddingInlineTall: Float = DimensionRawTokens.dimension300,
    val paddingInlineTaller: Float = DimensionRawTokens.dimension100,
    val paddingInlineTallest: Float = DimensionRawTokens.dimension150,
    val paddingInlineIsIconNone: Float = DimensionRawTokens.dimension0,
    val paddingInlineIsIconShorter: Float = DimensionRawTokens.dimension25,
    val paddingInlineIsIconShort: Float = DimensionRawTokens.dimension50,
    val paddingInlineIsIconMedium: Float = DimensionRawTokens.dimension75,
    val paddingInlineIsIconTall: Float = DimensionRawTokens.dimension100,
    val paddingInlineIsIconTaller: Float = DimensionRawTokens.dimension200,
    val paddingInlineIsIconTallest: Float = DimensionRawTokens.dimension300,
    val paddingInlineIsArrowNone: Float = DimensionRawTokens.dimension0,
    val paddingInlineIsArrowShorter: Float = DimensionRawTokens.dimension25,
    val paddingInlineIsArrowShort: Float = DimensionRawTokens.dimension50,
    val paddingInlineIsArrowMedium: Float = DimensionRawTokens.dimension75,
    val paddingInlineIsArrowTall: Float = DimensionRawTokens.dimension100,
    val paddingInlineIsArrowTaller: Float = DimensionRawTokens.dimension200,
    val paddingInlineIsArrowTallest: Float = DimensionRawTokens.dimension300,
    val paddingBlockNone: Float = DimensionRawTokens.dimension0,
    val paddingBlockShortest: Float = DimensionRawTokens.dimension50,
    val paddingBlockShorter: Float = DimensionRawTokens.dimension100,
    val paddingBlockShort: Float = DimensionRawTokens.dimension150,
    val paddingBlockMedium: Float = DimensionRawTokens.dimension200,
    val paddingBlockTall: Float = DimensionRawTokens.dimension300,
    val paddingBlockTaller: Float = DimensionRawTokens.dimension400,
    val paddingBlockIsIconNone: Float = DimensionRawTokens.dimension0,
    val paddingBlockIsIconShorter: Float = DimensionRawTokens.dimension25,
    val paddingBlockIsIconShort: Float = DimensionRawTokens.dimension50,
    val paddingBlockIsIconMedium: Float = DimensionRawTokens.dimension75,
    val paddingBlockIsIconTall: Float = DimensionRawTokens.dimension100,
    val paddingBlockIsIconTaller: Float = DimensionRawTokens.dimension150,
    val paddingBlockIsIconTallest: Float = DimensionRawTokens.dimension200,
    val insetNone: Float = DimensionRawTokens.dimension0,
    val insetSmash: Float = DimensionRawTokens.dimension25,
    val insetShortest: Float = DimensionRawTokens.dimension50,
    val insetShorter: Float = DimensionRawTokens.dimension75,
    val insetShort: Float = DimensionRawTokens.dimension100,
    val insetMedium: Float = DimensionRawTokens.dimension150,
    val insetTall: Float = DimensionRawTokens.dimension200,
    val insetTaller: Float = DimensionRawTokens.dimension300,
    val insetTallest: Float = DimensionRawTokens.dimension400,
    val insetSpacious: Float = DimensionRawTokens.dimension650,
    val columnGapNone: Float = DimensionRawTokens.dimension0,
    val columnGapShorter: Float = DimensionRawTokens.dimension50,
    val columnGapShort: Float = DimensionRawTokens.dimension100,
    val columnGapMedium: Float = DimensionRawTokens.dimension200,
    val columnGapTall: Float = DimensionRawTokens.dimension300,
    val columnGapTaller: Float = DimensionRawTokens.dimension400,
    val columnGapIsIconNone: Float = DimensionRawTokens.dimension0,
    val columnGapIsIconShorter: Float = DimensionRawTokens.dimension25,
    val columnGapIsIconShort: Float = DimensionRawTokens.dimension50,
    val columnGapIsIconMedium: Float = DimensionRawTokens.dimension75,
    val columnGapIsIconTall: Float = DimensionRawTokens.dimension100,
    val columnGapIsIconTaller: Float = DimensionRawTokens.dimension200,
    val columnGapIsArrowNone: Float = DimensionRawTokens.dimension0,
    val columnGapIsArrowShorter: Float = DimensionRawTokens.dimension25,
    val columnGapIsArrowShort: Float = DimensionRawTokens.dimension50,
    val columnGapIsArrowMedium: Float = DimensionRawTokens.dimension75,
    val columnGapIsArrowTall: Float = DimensionRawTokens.dimension100,
    val columnGapIsArrowTaller: Float = DimensionRawTokens.dimension200,
    val rowGapNone: Float = DimensionRawTokens.dimension0,
    val rowGapShorter: Float = DimensionRawTokens.dimension25,
    val rowGapShort: Float = DimensionRawTokens.dimension50,
    val rowGapMedium: Float = DimensionRawTokens.dimension75,
    val rowGapTall: Float = DimensionRawTokens.dimension100,
    val rowGapTaller: Float = DimensionRawTokens.dimension200,
    val rowGapIsIconNone: Float = DimensionRawTokens.dimension0,
    val rowGapIsIconShorter: Float = DimensionRawTokens.dimension25,
    val rowGapIsIconShort: Float = DimensionRawTokens.dimension50,
    val rowGapIsIconMedium: Float = DimensionRawTokens.dimension75,
    val rowGapIsIconTall: Float = DimensionRawTokens.dimension100,
    val rowGapIsIconTaller: Float = DimensionRawTokens.dimension200,
)
