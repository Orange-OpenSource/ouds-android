//
// Software Name: OUDS Android
// SPDX-FileCopyrightText: Copyright (c) Orange SA
// SPDX-License-Identifier: MIT
//
// This software is distributed under the MIT license,
// the text of which is available at https://opensource.org/license/MIT/
// or see the "LICENSE" file for more details.
//
// Software description: Android library of reusable graphical components
//

// Android system tokens version 1.0.0
// Generated by Tokenator

package com.orange.ouds.theme.tokens.material

import androidx.compose.ui.graphics.Color
import com.orange.ouds.tokens.raw.ColorRawTokens

object OudsMaterialColorTokens {
    val backgroundDark: Color = ColorRawTokens.colorFunctionalGrayDark880
    val backgroundLight: Color = ColorRawTokens.colorFunctionalWhite
    val errorContainerDark: Color = ColorRawTokens.colorFunctionalScarlet900
    val errorContainerLight: Color = ColorRawTokens.colorFunctionalScarlet100
    val errorDark: Color = ColorRawTokens.colorFunctionalScarlet300
    val errorLight: Color = ColorRawTokens.colorFunctionalScarlet600
    val inverseOnSurfaceDark: Color = ColorRawTokens.colorFunctionalBlack
    val inverseOnSurfaceLight: Color = ColorRawTokens.colorFunctionalWhite
    val inversePrimaryDark: Color = ColorRawTokens.colorFunctionalBlack
    val inversePrimaryLight: Color = ColorRawTokens.colorFunctionalWhite
    val inverseSurfaceDark: Color = ColorRawTokens.colorFunctionalGrayLight160
    val inverseSurfaceLight: Color = ColorRawTokens.colorFunctionalGrayDark720
    val onBackgroundDark: Color = ColorRawTokens.colorFunctionalGrayLight160
    val onBackgroundLight: Color = ColorRawTokens.colorFunctionalBlack
    val onErrorContainerDark: Color = ColorRawTokens.colorFunctionalGrayLight160
    val onErrorContainerLight: Color = ColorRawTokens.colorFunctionalBlack
    val onErrorDark: Color = ColorRawTokens.colorFunctionalBlack
    val onErrorLight: Color = ColorRawTokens.colorFunctionalWhite
    val onPrimaryContainerDark: Color = ColorRawTokens.colorFunctionalBlack
    val onPrimaryContainerLight: Color = ColorRawTokens.colorFunctionalWhite
    val onPrimaryDark: Color = ColorRawTokens.colorFunctionalBlack
    val onPrimaryFixedDark: Color = ColorRawTokens.colorFunctionalWhite
    val onPrimaryFixedLight: Color = ColorRawTokens.colorFunctionalWhite
    val onPrimaryFixedVariantDark: Color = ColorRawTokens.colorOpacityWhite640
    val onPrimaryFixedVariantLight: Color = ColorRawTokens.colorOpacityWhite640
    val onPrimaryLight: Color = ColorRawTokens.colorFunctionalGrayLight160
    val onSecondaryContainerDark: Color = ColorRawTokens.colorFunctionalGrayLight160
    val onSecondaryContainerLight: Color = ColorRawTokens.colorFunctionalBlack
    val onSecondaryDark: Color = ColorRawTokens.colorFunctionalBlack
    val onSecondaryFixedDark: Color = ColorRawTokens.colorFunctionalWhite
    val onSecondaryFixedLight: Color = ColorRawTokens.colorFunctionalWhite
    val onSecondaryFixedVariantDark: Color = ColorRawTokens.colorOpacityWhite640
    val onSecondaryFixedVariantLight: Color = ColorRawTokens.colorOpacityWhite640
    val onSecondaryLight: Color = ColorRawTokens.colorFunctionalGrayLight160
    val onSurfaceDark: Color = ColorRawTokens.colorFunctionalGrayLight160
    val onSurfaceLight: Color = ColorRawTokens.colorFunctionalBlack
    val onSurfaceVariantDark: Color = ColorRawTokens.colorOpacityWhite640
    val onSurfaceVariantLight: Color = ColorRawTokens.colorOpacityBlack680
    val onTertiaryContainerDark: Color = ColorRawTokens.colorFunctionalGrayLight160
    val onTertiaryContainerLight: Color = ColorRawTokens.colorFunctionalBlack
    val onTertiaryDark: Color = ColorRawTokens.colorFunctionalGrayLight160
    val onTertiaryFixedDark: Color = ColorRawTokens.colorFunctionalBlack
    val onTertiaryFixedLight: Color = ColorRawTokens.colorFunctionalBlack
    val onTertiaryFixedVariantDark: Color = ColorRawTokens.colorOpacityBlack680
    val onTertiaryFixedVariantLight: Color = ColorRawTokens.colorOpacityBlack680
    val onTertiaryLight: Color = ColorRawTokens.colorFunctionalBlack
    val outlineDark: Color = ColorRawTokens.colorFunctionalGrayLight160
    val outlineLight: Color = ColorRawTokens.colorFunctionalBlack
    val outlineVariantDark: Color = ColorRawTokens.colorOpacityWhite200
    val outlineVariantLight: Color = ColorRawTokens.colorOpacityBlack200
    val primaryContainerDark: Color = ColorRawTokens.colorFunctionalGrayLight160
    val primaryContainerLight: Color = ColorRawTokens.colorFunctionalBlack
    val primaryDark: Color = ColorRawTokens.colorFunctionalGrayLight160
    val primaryFixedDark: Color = ColorRawTokens.colorFunctionalBlack
    val primaryFixedDimDark: Color = ColorRawTokens.colorFunctionalBlack
    val primaryFixedDimLight: Color = ColorRawTokens.colorFunctionalBlack
    val primaryFixedLight: Color = ColorRawTokens.colorFunctionalBlack
    val primaryLight: Color = ColorRawTokens.colorFunctionalBlack
    val scrimDark: Color = ColorRawTokens.colorFunctionalBlack
    val scrimLight: Color = ColorRawTokens.colorFunctionalBlack
    val secondaryContainerDark: Color = ColorRawTokens.colorFunctionalGrayDark720
    val secondaryContainerLight: Color = ColorRawTokens.colorFunctionalGrayLight80
    val secondaryDark: Color = ColorRawTokens.colorFunctionalGrayLight160
    val secondaryFixedDark: Color = ColorRawTokens.colorFunctionalBlack
    val secondaryFixedDimDark: Color = ColorRawTokens.colorFunctionalBlack
    val secondaryFixedDimLight: Color = ColorRawTokens.colorFunctionalBlack
    val secondaryFixedLight: Color = ColorRawTokens.colorFunctionalBlack
    val secondaryLight: Color = ColorRawTokens.colorFunctionalBlack
    val surfaceBrightDark: Color = ColorRawTokens.colorFunctionalGrayDark640
    val surfaceBrightLight: Color = ColorRawTokens.colorFunctionalWhite
    val surfaceDark: Color = ColorRawTokens.colorFunctionalGrayDark880
    val surfaceDimDark: Color = ColorRawTokens.colorFunctionalBlack
    val surfaceDimLight: Color = ColorRawTokens.colorFunctionalGrayLight80
    val surfaceLight: Color = ColorRawTokens.colorFunctionalWhite
    val surfaceTintDark: Color = ColorRawTokens.colorFunctionalGrayDark720
    val surfaceTintLight: Color = ColorRawTokens.colorFunctionalGrayLight80
    val surfaceVariantDark: Color = ColorRawTokens.colorFunctionalGrayDark720
    val surfaceVariantLight: Color = ColorRawTokens.colorFunctionalGrayLight80
    val surfContainerDark: Color = ColorRawTokens.colorFunctionalGrayDark720
    val surfContainerHighDark: Color = ColorRawTokens.colorFunctionalGrayDark720
    val surfContainerHighestDark: Color = ColorRawTokens.colorFunctionalGrayDark720
    val surfContainerHighestLight: Color = ColorRawTokens.colorFunctionalGrayLight80
    val surfContainerHighLight: Color = ColorRawTokens.colorFunctionalGrayLight80
    val surfContainerLight: Color = ColorRawTokens.colorFunctionalGrayLight80
    val surfContainerLowDark: Color = ColorRawTokens.colorFunctionalGrayDark720
    val surfContainerLowestDark: Color = ColorRawTokens.colorFunctionalGrayDark720
    val surfContainerLowestLight: Color = ColorRawTokens.colorFunctionalWhite
    val surfContainerLowLight: Color = ColorRawTokens.colorFunctionalWhite
    val tertiaryContainerDark: Color = ColorRawTokens.colorFunctionalGrayDark880
    val tertiaryContainerLight: Color = ColorRawTokens.colorFunctionalWhite
    val tertiaryDark: Color = ColorRawTokens.colorFunctionalGrayDark880
    val tertiaryFixedDark: Color = ColorRawTokens.colorFunctionalWhite
    val tertiaryFixedDimDark: Color = ColorRawTokens.colorFunctionalGrayLight80
    val tertiaryFixedDimLight: Color = ColorRawTokens.colorFunctionalGrayLight80
    val tertiaryFixedLight: Color = ColorRawTokens.colorFunctionalWhite
    val tertiaryLight: Color = ColorRawTokens.colorFunctionalWhite
}
