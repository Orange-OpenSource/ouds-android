//
// Software Name: OUDS Android
// SPDX-FileCopyrightText: Copyright (c) Orange SA
// SPDX-License-Identifier: MIT
//
// This software is distributed under the MIT license,
// the text of which is available at https://opensource.org/license/MIT/
// or see the "LICENSE" file for more details.
//
// Software description: Android library of reusable graphical components
//

package com.orange.ouds.theme.tokens.semantic

import com.orange.ouds.tokens.global.raw.DimensionRawTokens

data class OudsSpaceSemanticTokens(
  val columnGapMedium: Float = DimensionRawTokens.dimension200,
  val columnGapNone: Float = DimensionRawTokens.dimension0,
  val columnGapShort: Float = DimensionRawTokens.dimension100,
  val columnGapShorter: Float = DimensionRawTokens.dimension50,
  val columnGapTall: Float = DimensionRawTokens.dimension300,
  val columnGapTaller: Float = DimensionRawTokens.dimension400,
  val columnGapWithArrowMedium: Float = DimensionRawTokens.dimension100,
  val columnGapWithArrowNone: Float = DimensionRawTokens.dimension0,
  val columnGapWithArrowShort: Float = DimensionRawTokens.dimension75,
  val columnGapWithArrowShorter: Float = DimensionRawTokens.dimension50,
  val columnGapWithArrowShortest: Float = DimensionRawTokens.dimension25,
  val columnGapWithArrowTall: Float = DimensionRawTokens.dimension200,
  val columnGapWithIconMedium: Float = DimensionRawTokens.dimension100,
  val columnGapWithIconNone: Float = DimensionRawTokens.dimension0,
  val columnGapWithIconShort: Float = DimensionRawTokens.dimension75,
  val columnGapWithIconShorter: Float = DimensionRawTokens.dimension50,
  val columnGapWithIconShortest: Float = DimensionRawTokens.dimension25,
  val columnGapWithIconTall: Float = DimensionRawTokens.dimension200,
  val fixedHuge: Float = DimensionRawTokens.dimension700,
  val fixedJumbo: Float = DimensionRawTokens.dimension800,
  val fixedMedium: Float = DimensionRawTokens.dimension200,
  val fixedNone: Float = DimensionRawTokens.dimension0,
  val fixedShort: Float = DimensionRawTokens.dimension150,
  val fixedShorter: Float = DimensionRawTokens.dimension100,
  val fixedShortest: Float = DimensionRawTokens.dimension50,
  val fixedSmash: Float = DimensionRawTokens.dimension25,
  val fixedSpacious: Float = DimensionRawTokens.dimension600,
  val fixedTall: Float = DimensionRawTokens.dimension300,
  val fixedTaller: Float = DimensionRawTokens.dimension400,
  val fixedTallest: Float = DimensionRawTokens.dimension500,
  val insetMedium: Float = DimensionRawTokens.dimension150,
  val insetNone: Float = DimensionRawTokens.dimension0,
  val insetShort: Float = DimensionRawTokens.dimension100,
  val insetShorter: Float = DimensionRawTokens.dimension75,
  val insetShortest: Float = DimensionRawTokens.dimension50,
  val insetSmash: Float = DimensionRawTokens.dimension25,
  val insetSpacious: Float = DimensionRawTokens.dimension500,
  val insetTall: Float = DimensionRawTokens.dimension200,
  val insetTaller: Float = DimensionRawTokens.dimension300,
  val insetTallest: Float = DimensionRawTokens.dimension400,
  val paddingBlockMedium: Float = DimensionRawTokens.dimension150,
  val paddingBlockNone: Float = DimensionRawTokens.dimension0,
  val paddingBlockShort: Float = DimensionRawTokens.dimension100,
  val paddingBlockShorter: Float = DimensionRawTokens.dimension50,
  val paddingBlockTall: Float = DimensionRawTokens.dimension200,
  val paddingBlockTaller: Float = DimensionRawTokens.dimension300,
  val paddingBlockTallest: Float = DimensionRawTokens.dimension400,
  val paddingBlockWithIconMedium: Float = DimensionRawTokens.dimension100,
  val paddingBlockWithIconNone: Float = DimensionRawTokens.dimension0,
  val paddingBlockWithIconShort: Float = DimensionRawTokens.dimension75,
  val paddingBlockWithIconShorter: Float = DimensionRawTokens.dimension50,
  val paddingBlockWithIconShortest: Float = DimensionRawTokens.dimension25,
  val paddingBlockWithIconTall: Float = DimensionRawTokens.dimension150,
  val paddingBlockWithIconTaller: Float = DimensionRawTokens.dimension200,
  val paddingInlineMedium: Float = DimensionRawTokens.dimension200,
  val paddingInlineNone: Float = DimensionRawTokens.dimension0,
  val paddingInlineShort: Float = DimensionRawTokens.dimension100,
  val paddingInlineShorter: Float = DimensionRawTokens.dimension50,
  val paddingInlineTall: Float = DimensionRawTokens.dimension300,
  val paddingInlineTaller: Float = DimensionRawTokens.dimension350,
  val paddingInlineTallest: Float = DimensionRawTokens.dimension400,
  val paddingInlineWithArrowMedium: Float = DimensionRawTokens.dimension100,
  val paddingInlineWithArrowNone: Float = DimensionRawTokens.dimension0,
  val paddingInlineWithArrowShort: Float = DimensionRawTokens.dimension75,
  val paddingInlineWithArrowShorter: Float = DimensionRawTokens.dimension50,
  val paddingInlineWithArrowShortest: Float = DimensionRawTokens.dimension25,
  val paddingInlineWithArrowTall: Float = DimensionRawTokens.dimension200,
  val paddingInlineWithArrowTaller: Float = DimensionRawTokens.dimension250,
  val paddingInlineWithArrowTallest: Float = DimensionRawTokens.dimension300,
  val paddingInlineWithIconMedium: Float = DimensionRawTokens.dimension200,
  val paddingInlineWithIconNone: Float = DimensionRawTokens.dimension0,
  val paddingInlineWithIconShort: Float = DimensionRawTokens.dimension100,
  val paddingInlineWithIconShorter: Float = DimensionRawTokens.dimension50,
  val paddingInlineWithIconShortest: Float = DimensionRawTokens.dimension25,
  val paddingInlineWithIconTall: Float = DimensionRawTokens.dimension250,
  val paddingInlineWithIconTaller: Float = DimensionRawTokens.dimension300,
  val paddingInlineWithIconTallest: Float = DimensionRawTokens.dimension350,
  val rowGapMedium: Float = DimensionRawTokens.dimension100,
  val rowGapNone: Float = DimensionRawTokens.dimension0,
  val rowGapShort: Float = DimensionRawTokens.dimension75,
  val rowGapShorter: Float = DimensionRawTokens.dimension50,
  val rowGapShortest: Float = DimensionRawTokens.dimension25,
  val rowGapTall: Float = DimensionRawTokens.dimension200,
  val rowGapWithIconMedium: Float = DimensionRawTokens.dimension100,
  val rowGapWithIconNone: Float = DimensionRawTokens.dimension0,
  val rowGapWithIconShort: Float = DimensionRawTokens.dimension75,
  val rowGapWithIconShorter: Float = DimensionRawTokens.dimension50,
  val rowGapWithIconShortest: Float = DimensionRawTokens.dimension25,
  val rowGapWithIconTall: Float = DimensionRawTokens.dimension200,
  val scaledMediumMobile: Float = DimensionRawTokens.dimension200,
  val scaledMediumTablet: Float = DimensionRawTokens.dimension300,
  val scaledNoneMobile: Float = DimensionRawTokens.dimension0,
  val scaledNoneTablet: Float = DimensionRawTokens.dimension0,
  val scaledShortMobile: Float = DimensionRawTokens.dimension150,
  val scaledShortTablet: Float = DimensionRawTokens.dimension200,
  val scaledShorterMobile: Float = DimensionRawTokens.dimension100,
  val scaledShorterTablet: Float = DimensionRawTokens.dimension150,
  val scaledShortestMobile: Float = DimensionRawTokens.dimension50,
  val scaledShortestTablet: Float = DimensionRawTokens.dimension100,
  val scaledSmashMobile: Float = DimensionRawTokens.dimension25,
  val scaledSmashTablet: Float = DimensionRawTokens.dimension50,
  val scaledSpaciousMobile: Float = DimensionRawTokens.dimension600,
  val scaledSpaciousTablet: Float = DimensionRawTokens.dimension700,
  val scaledTallMobile: Float = DimensionRawTokens.dimension300,
  val scaledTallTablet: Float = DimensionRawTokens.dimension400,
  val scaledTallerMobile: Float = DimensionRawTokens.dimension400,
  val scaledTallerTablet: Float = DimensionRawTokens.dimension500,
  val scaledTallestMobile: Float = DimensionRawTokens.dimension500,
  val scaledTallestTablet: Float = DimensionRawTokens.dimension600
)
