/*
 * Software Name: OUDS Android
 * SPDX-FileCopyrightText: Copyright (c) Orange SA
 * SPDX-License-Identifier: MIT
 *
 * This software is distributed under the MIT license,
 * the text of which is available at https://opensource.org/license/MIT/
 * or see the "LICENSE" file for more details.
 *
 * Software description: Android library of reusable graphical components
 */

package com.orange.ouds.theme.tokens.semantic

import androidx.compose.ui.graphics.Color
import com.orange.ouds.tokens.global.raw.ColorRawTokens
import com.orange.ouds.tokens.global.raw.OrangeBrandColorRawTokens

data class OudsColorSemanticTokens(
    val globalColorTokens: OudsColorGlobalSemanticTokens = OudsColorGlobalSemanticTokens(),
    val actionColorTokens: OudsColorActionSemanticTokens = OudsColorActionSemanticTokens(),
    val alwaysColorTokens: OudsColorAlwaysSemanticTokens = OudsColorAlwaysSemanticTokens(),
    val backgroundColorTokens: OudsColorBgSemanticTokens = OudsColorBgSemanticTokens(),
    val borderColorTokens: OudsColorBorderSemanticTokens = OudsColorBorderSemanticTokens(),
    val brandColorTokens: OudsColorBrandSemanticTokens = OudsColorBrandSemanticTokens(),
    val contentColorTokens: OudsColorContentSemanticTokens = OudsColorContentSemanticTokens(),
    val elevationColorTokens: OudsColorElevationSemanticTokens = OudsColorElevationSemanticTokens(),
    val gradientColorTokens: OudsColorGradientSemanticTokens = OudsColorGradientSemanticTokens(),
    val decorativeColorTokens: OudsColorDecorativeSemanticTokens = OudsColorDecorativeSemanticTokens(),
)

data class OudsGlobalColorSemanticTokens(
    val transparentDefaultLight: Color = ColorRawTokens.colorTransparentBlack0,
    val transparentDefaultDark: Color = ColorRawTokens.colorTransparentBlack0,
)

data class OudsActionColorSemanticTokens(
    val actionDisabledLight: Color = ColorRawTokens.colorFunctionalLightGray400,
    val actionDisabledOnBgEmphasizedLight: Color = ColorRawTokens.colorFunctionalDarkGray400,
    val actionNegativeEnabledLight: Color = ColorRawTokens.colorFunctionalScarlet600,
    val actionNegativeFocusLight: Color = ColorRawTokens.colorFunctionalScarlet700,
    val actionNegativeHoverLight: Color = ColorRawTokens.colorFunctionalScarlet700,
    val actionNegativeLoadingLight: Color = ColorRawTokens.colorFunctionalScarlet800,
    val actionNegativePressedLight: Color = ColorRawTokens.colorFunctionalScarlet800,
    val actionPrimaryEnabledLight: Color = ColorRawTokens.colorFunctionalBlack,
    val actionPrimaryEnabledOnBgEmphasizedLight: Color = ColorRawTokens.colorFunctionalLightGray160,
    val actionPrimaryFocusLight: Color = ColorRawTokens.colorFunctionalDarkGray400,
    val actionPrimaryFocusOnBgEmphasizedLight: Color = ColorRawTokens.colorFunctionalLightGray560,
    val actionPrimaryHoverLight: Color = ColorRawTokens.colorFunctionalDarkGray400,
    val actionPrimaryHoverOnBgEmphasizedLight: Color = ColorRawTokens.colorFunctionalLightGray560,
    val actionPrimaryLoadingLight: Color = OrangeBrandColorRawTokens.colorOrange550,
    val actionPrimaryLoadingOnBgEmphasizedLight: Color = OrangeBrandColorRawTokens.colorOrange500,
    val actionPrimaryPressedLight: Color = OrangeBrandColorRawTokens.colorOrange550,
    val actionPrimaryPressedOnBgEmphasizedLight: Color = OrangeBrandColorRawTokens.colorOrange500,
    val actionSecondaryEnabledLight: Color = ColorRawTokens.colorFunctionalLightGray80,
    val actionSecondaryEnabledOnBgEmphasizedLight: Color = ColorRawTokens.colorFunctionalDarkGray720,
    val actionSecondaryFocusLight: Color = ColorRawTokens.colorFunctionalLightGray160,
    val actionSecondaryFocusOnBgEmphasizedLight: Color = ColorRawTokens.colorFunctionalDarkGray640,
    val actionSecondaryHoverLight: Color = ColorRawTokens.colorFunctionalLightGray160,
    val actionSecondaryHoverOnBgEmphasizedLight: Color = ColorRawTokens.colorFunctionalDarkGray640,
    val actionSecondaryLoadingLight: Color = ColorRawTokens.colorFunctionalLightGray160,
    val actionSecondaryLoadingOnBgEmphasizedLight: Color = ColorRawTokens.colorFunctionalDarkGray640,
    val actionSecondaryPressedLight: Color = ColorRawTokens.colorFunctionalLightGray160,
    val actionSecondaryPressedOnBgEmphasizedLight: Color = ColorRawTokens.colorFunctionalDarkGray640,
    val actionSelectedLight: Color = OrangeBrandColorRawTokens.colorOrange550,
    val actionSelectedOnBgEmphasizedLight: Color = OrangeBrandColorRawTokens.colorOrange500,
    val actionVisitedLight: Color = ColorRawTokens.colorDecorativeAmethyst600,
    val actionVisitedOnBgEmphasizedLight: Color = ColorRawTokens.colorDecorativeAmethyst400,
    val actionDisabledDark: Color = ColorRawTokens.colorFunctionalDarkGray400,
    val actionDisabledOnBgEmphasizedDark: Color = ColorRawTokens.colorFunctionalDarkGray400,
    val actionNegativeEnabledDark: Color = ColorRawTokens.colorFunctionalScarlet600,
    val actionNegativeFocusDark: Color = ColorRawTokens.colorFunctionalScarlet700,
    val actionNegativeHoverDark: Color = ColorRawTokens.colorFunctionalScarlet700,
    val actionNegativeLoadingDark: Color = ColorRawTokens.colorFunctionalScarlet800,
    val actionNegativePressedDark: Color = ColorRawTokens.colorFunctionalScarlet800,
    val actionPrimaryEnabledDark: Color = ColorRawTokens.colorFunctionalLightGray160,
    val actionPrimaryEnabledOnBgEmphasizedDark: Color = ColorRawTokens.colorFunctionalLightGray160,
    val actionPrimaryFocusDark: Color = ColorRawTokens.colorFunctionalLightGray560,
    val actionPrimaryFocusOnBgEmphasizedDark: Color = ColorRawTokens.colorFunctionalLightGray560,
    val actionPrimaryHoverDark: Color = ColorRawTokens.colorFunctionalLightGray560,
    val actionPrimaryHoverOnBgEmphasizedDark: Color = ColorRawTokens.colorFunctionalLightGray560,
    val actionPrimaryLoadingDark: Color = OrangeBrandColorRawTokens.colorOrange500,
    val actionPrimaryLoadingOnBgEmphasizedDark: Color = OrangeBrandColorRawTokens.colorOrange500,
    val actionPrimaryPressedDark: Color = OrangeBrandColorRawTokens.colorOrange500,
    val actionPrimaryPressedOnBgEmphasizedDark: Color = OrangeBrandColorRawTokens.colorOrange500,
    val actionSecondaryEnabledDark: Color = ColorRawTokens.colorFunctionalDarkGray720,
    val actionSecondaryEnabledOnBgEmphasizedDark: Color = ColorRawTokens.colorFunctionalDarkGray720,
    val actionSecondaryFocusDark: Color = ColorRawTokens.colorFunctionalDarkGray640,
    val actionSecondaryFocusOnBgEmphasizedDark: Color = ColorRawTokens.colorFunctionalDarkGray640,
    val actionSecondaryHoverDark: Color = ColorRawTokens.colorFunctionalDarkGray640,
    val actionSecondaryHoverOnBgEmphasizedDark: Color = ColorRawTokens.colorFunctionalDarkGray640,
    val actionSecondaryLoadingDark: Color = ColorRawTokens.colorFunctionalDarkGray640,
    val actionSecondaryLoadingOnBgEmphasizedDark: Color = ColorRawTokens.colorFunctionalDarkGray640,
    val actionSecondaryPressedDark: Color = ColorRawTokens.colorFunctionalDarkGray640,
    val actionSecondaryPressedOnBgEmphasizedDark: Color = ColorRawTokens.colorFunctionalDarkGray640,
    val actionSelectedDark: Color = OrangeBrandColorRawTokens.colorOrange500,
    val actionSelectedOnBgEmphasizedDark: Color = OrangeBrandColorRawTokens.colorOrange500,
    val actionVisitedDark: Color = ColorRawTokens.colorDecorativeAmethyst400,
    val actionVisitedOnBgEmphasizedDark: Color = ColorRawTokens.colorDecorativeAmethyst400,
)

data class OudsAlwaysColorSemanticTokens(
    val alwaysAccentLight: Color = ColorRawTokens.colorFunctionalSun500,
    val alwaysBlackLight: Color = ColorRawTokens.colorFunctionalBlack,
    val alwaysInfoLight: Color = ColorRawTokens.colorFunctionalDodgerBlue500,
    val alwaysNegativeLight: Color = ColorRawTokens.colorFunctionalScarlet600,
    val alwaysOnAccentLight: Color = ColorRawTokens.colorFunctionalBlack,
    val alwaysOnBlackLight: Color = ColorRawTokens.colorFunctionalWhite,
    val alwaysOnInfoLight: Color = ColorRawTokens.colorFunctionalBlack,
    val alwaysOnNegativeLight: Color = ColorRawTokens.colorFunctionalWhite,
    val alwaysOnPositiveLight: Color = ColorRawTokens.colorFunctionalBlack,
    val alwaysOnWarningLight: Color = ColorRawTokens.colorFunctionalBlack,
    val alwaysOnWhiteLight: Color = ColorRawTokens.colorFunctionalBlack,
    val alwaysPositiveLight: Color = ColorRawTokens.colorFunctionalMalachite500,
    val alwaysWarningLight: Color = ColorRawTokens.colorFunctionalSun500,
    val alwaysWhiteLight: Color = ColorRawTokens.colorFunctionalWhite,
    val alwaysAccentDark: Color = ColorRawTokens.colorFunctionalSun500,
    val alwaysBlackDark: Color = ColorRawTokens.colorFunctionalBlack,
    val alwaysInfoDark: Color = ColorRawTokens.colorFunctionalDodgerBlue500,
    val alwaysNegativeDark: Color = ColorRawTokens.colorFunctionalScarlet600,
    val alwaysOnAccentDark: Color = ColorRawTokens.colorFunctionalDarkGray880,
    val alwaysOnBlackDark: Color = ColorRawTokens.colorFunctionalLightGray160,
    val alwaysOnInfoDark: Color = ColorRawTokens.colorFunctionalDarkGray880,
    val alwaysOnNegativeDark: Color = ColorRawTokens.colorFunctionalLightGray160,
    val alwaysOnPositiveDark: Color = ColorRawTokens.colorFunctionalDarkGray880,
    val alwaysOnWarningDark: Color = ColorRawTokens.colorFunctionalDarkGray880,
    val alwaysOnWhiteDark: Color = ColorRawTokens.colorFunctionalDarkGray880,
    val alwaysPositiveDark: Color = ColorRawTokens.colorFunctionalMalachite500,
    val alwaysWarningDark: Color = ColorRawTokens.colorFunctionalSun500,
    val alwaysWhiteDark: Color = ColorRawTokens.colorFunctionalWhite,
)

data class OudsBgColorSemanticTokens(
    val bgBrandPrimaryLight: Color = OrangeBrandColorRawTokens.colorOrange550,
    val bgEmphasizedLight: Color = ColorRawTokens.colorFunctionalDarkGray880,
    val bgPrimaryLight: Color = ColorRawTokens.colorFunctionalWhite,
    val bgSecondaryLight: Color = ColorRawTokens.colorFunctionalLightGray80,
    val bgStatusAccentEmphasizedLight: Color = ColorRawTokens.colorFunctionalSun500,
    val bgStatusAccentMutedLight: Color = OrangeBrandColorRawTokens.colorWarmGray100,
    val bgStatusAccentMutedOnBgEmphasizedLight: Color = OrangeBrandColorRawTokens.colorWarmGray900,
    val bgStatusInfoEmphasizedLight: Color = ColorRawTokens.colorFunctionalDodgerBlue500,
    val bgStatusInfoMutedLight: Color = ColorRawTokens.colorFunctionalDodgerBlue100,
    val bgStatusInfoMutedOnBgEmphasizedLight: Color = ColorRawTokens.colorFunctionalDodgerBlue900,
    val bgStatusNegativeEmphasizedLight: Color = ColorRawTokens.colorFunctionalScarlet600,
    val bgStatusNegativeMutedLight: Color = ColorRawTokens.colorFunctionalScarlet100,
    val bgStatusNegativeMutedOnBgEmphasizedLight: Color = ColorRawTokens.colorFunctionalScarlet900,
    val bgStatusNeutralLight: Color = ColorRawTokens.colorFunctionalLightGray80,
    val bgStatusNeutralOnBgEmphasizedLight: Color = ColorRawTokens.colorFunctionalDarkGray720,
    val bgStatusPositiveEmphasizedLight: Color = ColorRawTokens.colorFunctionalMalachite500,
    val bgStatusPositiveMutedLight: Color = ColorRawTokens.colorFunctionalMalachite100,
    val bgStatusPositiveMutedOnBgEmphasizedLight: Color = ColorRawTokens.colorFunctionalMalachite900,
    val bgStatusWarningEmphasizedLight: Color = ColorRawTokens.colorFunctionalSun500,
    val bgStatusWarningMutedLight: Color = ColorRawTokens.colorFunctionalSun100,
    val bgStatusWarningMutedOnBgEmphasizedLight: Color = ColorRawTokens.colorFunctionalSun900,
    val bgTertiaryLight: Color = OrangeBrandColorRawTokens.colorWarmGray100,
    val bgBrandPrimaryDark: Color = OrangeBrandColorRawTokens.colorOrange500,
    val bgEmphasizedDark: Color = ColorRawTokens.colorFunctionalDarkGray640,
    val bgPrimaryDark: Color = ColorRawTokens.colorFunctionalDarkGray880,
    val bgSecondaryDark: Color = ColorRawTokens.colorFunctionalDarkGray800,
    val bgStatusAccentEmphasizedDark: Color = ColorRawTokens.colorFunctionalSun500,
    val bgStatusAccentMutedDark: Color = OrangeBrandColorRawTokens.colorWarmGray900,
    val bgStatusAccentMutedOnBgEmphasizedDark: Color = OrangeBrandColorRawTokens.colorWarmGray900,
    val bgStatusInfoEmphasizedDark: Color = ColorRawTokens.colorFunctionalDodgerBlue500,
    val bgStatusInfoMutedDark: Color = ColorRawTokens.colorFunctionalDodgerBlue900,
    val bgStatusInfoMutedOnBgEmphasizedDark: Color = ColorRawTokens.colorFunctionalDodgerBlue900,
    val bgStatusNegativeEmphasizedDark: Color = ColorRawTokens.colorFunctionalScarlet600,
    val bgStatusNegativeMutedDark: Color = ColorRawTokens.colorFunctionalScarlet900,
    val bgStatusNegativeMutedOnBgEmphasizedDark: Color = ColorRawTokens.colorFunctionalScarlet900,
    val bgStatusNeutralDark: Color = ColorRawTokens.colorFunctionalDarkGray720,
    val bgStatusNeutralOnBgEmphasizedDark: Color = ColorRawTokens.colorFunctionalDarkGray720,
    val bgStatusPositiveEmphasizedDark: Color = ColorRawTokens.colorFunctionalMalachite500,
    val bgStatusPositiveMutedDark: Color = ColorRawTokens.colorFunctionalMalachite900,
    val bgStatusPositiveMutedOnBgEmphasizedDark: Color = ColorRawTokens.colorFunctionalMalachite900,
    val bgStatusWarningEmphasizedDark: Color = ColorRawTokens.colorFunctionalSun500,
    val bgStatusWarningMutedDark: Color = ColorRawTokens.colorFunctionalSun900,
    val bgStatusWarningMutedOnBgEmphasizedDark: Color = ColorRawTokens.colorFunctionalSun900,
    val bgTertiaryDark: Color = OrangeBrandColorRawTokens.colorWarmGray900,
)

data class OudsBorderColorSemanticTokens(
    val borderBrandPrimaryLight: Color = OrangeBrandColorRawTokens.colorOrange550,
    val borderBrandPrimaryOnBgEmphasizedLight: Color = OrangeBrandColorRawTokens.colorOrange500,
    val borderDefaultLight: Color = ColorRawTokens.colorFunctionalLightGray400,
    val borderDefaultOnBgEmphasizedLight: Color = ColorRawTokens.colorFunctionalDarkGray400,
    val borderEmphasizedLight: Color = ColorRawTokens.colorFunctionalBlack,
    val borderEmphasizedOnBgEmphasizedLight: Color = ColorRawTokens.colorFunctionalLightGray160,
    val borderFocusLight: Color = ColorRawTokens.colorFunctionalBlack,
    val borderFocusInsetLight: Color = ColorRawTokens.colorFunctionalWhite,
    val borderFocusInsetOnBgEmphasizedLight: Color = ColorRawTokens.colorFunctionalDarkGray880,
    val borderFocusOnBgEmphasizedLight: Color = ColorRawTokens.colorFunctionalLightGray160,
    val borderOnBrandPrimaryLight: Color = ColorRawTokens.colorFunctionalWhite,
    val borderBrandPrimaryDark: Color = OrangeBrandColorRawTokens.colorOrange500,
    val borderBrandPrimaryOnBgEmphasizedDark: Color = OrangeBrandColorRawTokens.colorOrange500,
    val borderDefaultDark: Color = ColorRawTokens.colorFunctionalDarkGray400,
    val borderDefaultOnBgEmphasizedDark: Color = ColorRawTokens.colorFunctionalDarkGray400,
    val borderEmphasizedDark: Color = ColorRawTokens.colorFunctionalLightGray160,
    val borderEmphasizedOnBgEmphasizedDark: Color = ColorRawTokens.colorFunctionalLightGray160,
    val borderFocusDark: Color = ColorRawTokens.colorFunctionalLightGray160,
    val borderFocusInsetDark: Color = ColorRawTokens.colorFunctionalDarkGray880,
    val borderFocusInsetOnBgEmphasizedDark: Color = ColorRawTokens.colorFunctionalLightGray160,
    val borderFocusOnBgEmphasizedDark: Color = ColorRawTokens.colorFunctionalDarkGray880,
    val borderOnBrandPrimaryDark: Color = ColorRawTokens.colorFunctionalBlack,
)

data class OudsBrandColorSemanticTokens(
    val brandAccentDefaultLight: Color = ColorRawTokens.colorFunctionalSun500,
    val brandAccentHighLight: Color = ColorRawTokens.colorFunctionalSun600,
    val brandAccentHighestLight: Color = OrangeBrandColorRawTokens.colorWarmGray900,
    val brandAccentLowestLight: Color = OrangeBrandColorRawTokens.colorWarmGray100,
    val brandInfoDefaultLight: Color = ColorRawTokens.colorFunctionalDodgerBlue500,
    val brandInfoHighestLight: Color = ColorRawTokens.colorFunctionalDodgerBlue900,
    val brandInfoLowestLight: Color = ColorRawTokens.colorFunctionalDodgerBlue100,
    val brandNegativeDefaultLight: Color = ColorRawTokens.colorFunctionalScarlet600,
    val brandNegativeHighLight: Color = ColorRawTokens.colorFunctionalScarlet700,
    val brandNegativeHigherLight: Color = ColorRawTokens.colorFunctionalScarlet800,
    val brandNegativeHighestLight: Color = ColorRawTokens.colorFunctionalScarlet900,
    val brandNegativeLowestLight: Color = ColorRawTokens.colorFunctionalScarlet100,
    val brandNeutralEmphasizedBlackLight: Color = ColorRawTokens.colorFunctionalBlack,
    val brandNeutralEmphasizedHighLight: Color = ColorRawTokens.colorFunctionalDarkGray720,
    val brandNeutralEmphasizedHigherLight: Color = ColorRawTokens.colorFunctionalDarkGray800,
    val brandNeutralEmphasizedHighestLight: Color = ColorRawTokens.colorFunctionalDarkGray880,
    val brandNeutralEmphasizedLowLight: Color = ColorRawTokens.colorFunctionalDarkGray560,
    val brandNeutralEmphasizedLowerLight: Color = ColorRawTokens.colorFunctionalDarkGray480,
    val brandNeutralEmphasizedLowestLight: Color = ColorRawTokens.colorFunctionalDarkGray400,
    val brandNeutralEmphasizedMediumLight: Color = ColorRawTokens.colorFunctionalDarkGray640,
    val brandNeutralMutedHighestLight: Color = ColorRawTokens.colorFunctionalDarkGray160,
    val brandNeutralMutedLowLight: Color = ColorRawTokens.colorFunctionalLightGray400,
    val brandNeutralMutedLowerLight: Color = ColorRawTokens.colorFunctionalLightGray160,
    val brandNeutralMutedLowestLight: Color = ColorRawTokens.colorFunctionalLightGray80,
    val brandNeutralMutedMediumLight: Color = ColorRawTokens.colorFunctionalLightGray560,
    val brandNeutralMutedWhiteLight: Color = ColorRawTokens.colorFunctionalWhite,
    val brandPositiveDefaultLight: Color = ColorRawTokens.colorFunctionalMalachite500,
    val brandPositiveHighestLight: Color = ColorRawTokens.colorFunctionalMalachite900,
    val brandPositiveLowestLight: Color = ColorRawTokens.colorFunctionalMalachite100,
    val brandPrimaryDefaultLight: Color = OrangeBrandColorRawTokens.colorOrange550,
    val brandPrimaryLowLight: Color = OrangeBrandColorRawTokens.colorOrange500,
    val brandWarningDefaultLight: Color = ColorRawTokens.colorFunctionalSun500,
    val brandWarningHighLight: Color = ColorRawTokens.colorFunctionalSun600,
    val brandWarningHighestLight: Color = ColorRawTokens.colorFunctionalSun900,
    val brandWarningLowestLight: Color = ColorRawTokens.colorFunctionalSun100,
    val brandAccentDefaultDark: Color = ColorRawTokens.colorFunctionalSun500,
    val brandAccentHighDark: Color = ColorRawTokens.colorFunctionalSun600,
    val brandAccentHighestDark: Color = OrangeBrandColorRawTokens.colorWarmGray900,
    val brandAccentLowestDark: Color = OrangeBrandColorRawTokens.colorWarmGray100,
    val brandInfoDefaultDark: Color = ColorRawTokens.colorFunctionalDodgerBlue500,
    val brandInfoHighestDark: Color = ColorRawTokens.colorFunctionalDodgerBlue900,
    val brandInfoLowestDark: Color = ColorRawTokens.colorFunctionalDodgerBlue100,
    val brandNegativeDefaultDark: Color = ColorRawTokens.colorFunctionalScarlet600,
    val brandNegativeHighDark: Color = ColorRawTokens.colorFunctionalScarlet700,
    val brandNegativeHigherDark: Color = ColorRawTokens.colorFunctionalScarlet800,
    val brandNegativeHighestDark: Color = ColorRawTokens.colorFunctionalScarlet900,
    val brandNegativeLowestDark: Color = ColorRawTokens.colorFunctionalScarlet100,
    val brandNeutralEmphasizedBlackDark: Color = ColorRawTokens.colorFunctionalBlack,
    val brandNeutralEmphasizedHighDark: Color = ColorRawTokens.colorFunctionalDarkGray720,
    val brandNeutralEmphasizedHigherDark: Color = ColorRawTokens.colorFunctionalDarkGray800,
    val brandNeutralEmphasizedHighestDark: Color = ColorRawTokens.colorFunctionalDarkGray880,
    val brandNeutralEmphasizedLowDark: Color = ColorRawTokens.colorFunctionalDarkGray560,
    val brandNeutralEmphasizedLowerDark: Color = ColorRawTokens.colorFunctionalDarkGray480,
    val brandNeutralEmphasizedLowestDark: Color = ColorRawTokens.colorFunctionalDarkGray400,
    val brandNeutralEmphasizedMediumDark: Color = ColorRawTokens.colorFunctionalDarkGray640,
    val brandNeutralMutedHighestDark: Color = ColorRawTokens.colorFunctionalDarkGray160,
    val brandNeutralMutedLowDark: Color = ColorRawTokens.colorFunctionalLightGray400,
    val brandNeutralMutedLowerDark: Color = ColorRawTokens.colorFunctionalLightGray160,
    val brandNeutralMutedLowestDark: Color = ColorRawTokens.colorFunctionalLightGray80,
    val brandNeutralMutedMediumDark: Color = ColorRawTokens.colorFunctionalLightGray560,
    val brandNeutralMutedWhiteDark: Color = ColorRawTokens.colorFunctionalWhite,
    val brandPositiveDefaultDark: Color = ColorRawTokens.colorFunctionalMalachite500,
    val brandPositiveHighestDark: Color = ColorRawTokens.colorFunctionalMalachite900,
    val brandPositiveLowestDark: Color = ColorRawTokens.colorFunctionalMalachite100,
    val brandPrimaryDefaultDark: Color = OrangeBrandColorRawTokens.colorOrange550,
    val brandPrimaryLowDark: Color = OrangeBrandColorRawTokens.colorOrange500,
    val brandWarningDefaultDark: Color = ColorRawTokens.colorFunctionalSun500,
    val brandWarningHighDark: Color = ColorRawTokens.colorFunctionalSun600,
    val brandWarningHighestDark: Color = ColorRawTokens.colorFunctionalSun900,
    val brandWarningLowestDark: Color = ColorRawTokens.colorFunctionalSun100,
)

data class OudsContentColorSemanticTokens(
    val contentBrandPrimaryLight: Color = OrangeBrandColorRawTokens.colorOrange550,
    val contentBrandPrimaryOnBgEmphasizedLight: Color = OrangeBrandColorRawTokens.colorOrange500,
    val contentDefaultLight: Color = ColorRawTokens.colorFunctionalBlack,
    val contentDefaultOnBgEmphasizedLight: Color = ColorRawTokens.colorFunctionalLightGray160,
    val contentDisabledLight: Color = ColorRawTokens.colorFunctionalLightGray400,
    val contentDisabledOnBgEmphasizedLight: Color = ColorRawTokens.colorFunctionalDarkGray400,
    val contentMutedLight: Color = ColorRawTokens.colorFunctionalDarkGray400,
    val contentMutedOnBgEmphasizedLight: Color = ColorRawTokens.colorFunctionalLightGray560,
    val contentOnActionDisabledLight: Color = ColorRawTokens.colorFunctionalWhite,
    val contentOnActionDisabledOnBgEmphasizedLight: Color = ColorRawTokens.colorFunctionalBlack,
    val contentOnActionNegativeLight: Color = ColorRawTokens.colorFunctionalWhite,
    val contentOnActionPrimaryEnabledLight: Color = ColorRawTokens.colorFunctionalWhite,
    val contentOnActionPrimaryEnabledOnBgEmphasizedLight: Color = ColorRawTokens.colorFunctionalBlack,
    val contentOnActionPrimaryFocusLight: Color = ColorRawTokens.colorFunctionalWhite,
    val contentOnActionPrimaryFocusOnBgEmphasizedLight: Color = ColorRawTokens.colorFunctionalBlack,
    val contentOnActionPrimaryHoverLight: Color = ColorRawTokens.colorFunctionalWhite,
    val contentOnActionPrimaryHoverOnBgEmphasizedLight: Color = ColorRawTokens.colorFunctionalBlack,
    val contentOnActionPrimaryLoadingLight: Color = ColorRawTokens.colorFunctionalWhite,
    val contentOnActionPrimaryLoadingOnBgEmphasizedLight: Color = ColorRawTokens.colorFunctionalBlack,
    val contentOnActionPrimaryPressedLight: Color = ColorRawTokens.colorFunctionalWhite,
    val contentOnActionPrimaryPressedOnBgEmphasizedLight: Color = ColorRawTokens.colorFunctionalBlack,
    val contentOnBrandPrimaryLight: Color = ColorRawTokens.colorFunctionalWhite,
    val contentOnStatusAccentEmphasizedLight: Color = ColorRawTokens.colorFunctionalBlack,
    val contentOnStatusAccentMutedLight: Color = ColorRawTokens.colorFunctionalBlack,
    val contentOnStatusAccentMutedOnBgEmphasizedLight: Color = ColorRawTokens.colorFunctionalLightGray160,
    val contentOnStatusInfoEmphasizedLight: Color = ColorRawTokens.colorFunctionalBlack,
    val contentOnStatusInfoMutedLight: Color = ColorRawTokens.colorFunctionalBlack,
    val contentOnStatusInfoMutedOnBgEmphasizedLight: Color = ColorRawTokens.colorFunctionalLightGray160,
    val contentOnStatusNegativeEmphasizedLight: Color = ColorRawTokens.colorFunctionalWhite,
    val contentOnStatusNegativeMutedLight: Color = ColorRawTokens.colorFunctionalBlack,
    val contentOnStatusNegativeMutedOnBgEmphasizedLight: Color = ColorRawTokens.colorFunctionalLightGray160,
    val contentOnStatusPositiveEmphasizedLight: Color = ColorRawTokens.colorFunctionalBlack,
    val contentOnStatusPositiveMutedLight: Color = ColorRawTokens.colorFunctionalBlack,
    val contentOnStatusPositiveMutedOnBgEmphasizedLight: Color = ColorRawTokens.colorFunctionalLightGray160,
    val contentOnStatusWarningEmphasizedLight: Color = ColorRawTokens.colorFunctionalBlack,
    val contentOnStatusWarningMutedLight: Color = ColorRawTokens.colorFunctionalBlack,
    val contentOnStatusWarningMutedOnBgEmphasizedLight: Color = ColorRawTokens.colorFunctionalLightGray160,
    val contentStatusInfoLight: Color = ColorRawTokens.colorFunctionalDodgerBlue500,
    val contentStatusNegativeLight: Color = ColorRawTokens.colorFunctionalScarlet600,
    val contentStatusPositiveLight: Color = ColorRawTokens.colorFunctionalMalachite500,
    val contentStatusWarningLight: Color = ColorRawTokens.colorFunctionalSun500,
    val contentBrandPrimaryDark: Color = OrangeBrandColorRawTokens.colorOrange500,
    val contentBrandPrimaryOnBgEmphasizedDark: Color = OrangeBrandColorRawTokens.colorOrange500,
    val contentDefaultDark: Color = ColorRawTokens.colorFunctionalLightGray160,
    val contentDefaultOnBgEmphasizedDark: Color = ColorRawTokens.colorFunctionalLightGray160,
    val contentDisabledDark: Color = ColorRawTokens.colorFunctionalDarkGray400,
    val contentDisabledOnBgEmphasizedDark: Color = ColorRawTokens.colorFunctionalDarkGray400,
    val contentMutedDark: Color = ColorRawTokens.colorFunctionalLightGray560,
    val contentMutedOnBgEmphasizedDark: Color = ColorRawTokens.colorFunctionalLightGray560,
    val contentOnActionDisabledDark: Color = ColorRawTokens.colorFunctionalBlack,
    val contentOnActionDisabledOnBgEmphasizedDark: Color = ColorRawTokens.colorFunctionalBlack,
    val contentOnActionNegativeDark: Color = ColorRawTokens.colorFunctionalWhite,
    val contentOnActionPrimaryEnabledDark: Color = ColorRawTokens.colorFunctionalBlack,
    val contentOnActionPrimaryEnabledOnBgEmphasizedDark: Color = ColorRawTokens.colorFunctionalBlack,
    val contentOnActionPrimaryFocusDark: Color = ColorRawTokens.colorFunctionalBlack,
    val contentOnActionPrimaryFocusOnBgEmphasizedDark: Color = ColorRawTokens.colorFunctionalBlack,
    val contentOnActionPrimaryHoverDark: Color = ColorRawTokens.colorFunctionalBlack,
    val contentOnActionPrimaryHoverOnBgEmphasizedDark: Color = ColorRawTokens.colorFunctionalBlack,
    val contentOnActionPrimaryLoadingDark: Color = ColorRawTokens.colorFunctionalBlack,
    val contentOnActionPrimaryLoadingOnBgEmphasizedDark: Color = ColorRawTokens.colorFunctionalBlack,
    val contentOnActionPrimaryPressedDark: Color = ColorRawTokens.colorFunctionalBlack,
    val contentOnActionPrimaryPressedOnBgEmphasizedDark: Color = ColorRawTokens.colorFunctionalBlack,
    val contentOnBrandPrimaryDark: Color = ColorRawTokens.colorFunctionalBlack,
    val contentOnStatusAccentEmphasizedDark: Color = ColorRawTokens.colorFunctionalBlack,
    val contentOnStatusAccentMutedDark: Color = ColorRawTokens.colorFunctionalLightGray160,
    val contentOnStatusAccentMutedOnBgEmphasizedDark: Color = ColorRawTokens.colorFunctionalLightGray160,
    val contentOnStatusInfoEmphasizedDark: Color = ColorRawTokens.colorFunctionalBlack,
    val contentOnStatusInfoMutedDark: Color = ColorRawTokens.colorFunctionalLightGray160,
    val contentOnStatusInfoMutedOnBgEmphasizedDark: Color = ColorRawTokens.colorFunctionalLightGray160,
    val contentOnStatusNegativeEmphasizedDark: Color = ColorRawTokens.colorFunctionalWhite,
    val contentOnStatusNegativeMutedDark: Color = ColorRawTokens.colorFunctionalLightGray160,
    val contentOnStatusNegativeMutedOnBgEmphasizedDark: Color = ColorRawTokens.colorFunctionalLightGray160,
    val contentOnStatusPositiveEmphasizedDark: Color = ColorRawTokens.colorFunctionalBlack,
    val contentOnStatusPositiveMutedDark: Color = ColorRawTokens.colorFunctionalLightGray160,
    val contentOnStatusPositiveMutedOnBgEmphasizedDark: Color = ColorRawTokens.colorFunctionalLightGray160,
    val contentOnStatusWarningEmphasizedDark: Color = ColorRawTokens.colorFunctionalBlack,
    val contentOnStatusWarningMutedDark: Color = ColorRawTokens.colorFunctionalLightGray160,
    val contentOnStatusWarningMutedOnBgEmphasizedDark: Color = ColorRawTokens.colorFunctionalLightGray160,
    val contentStatusInfoDark: Color = ColorRawTokens.colorFunctionalDodgerBlue500,
    val contentStatusNegativeDark: Color = ColorRawTokens.colorFunctionalScarlet600,
    val contentStatusPositiveDark: Color = ColorRawTokens.colorFunctionalMalachite500,
    val contentStatusWarningDark: Color = ColorRawTokens.colorFunctionalSun500,
)

data class OudsElevationColorSemanticTokens(
    val elevationDragLight: Color = ColorRawTokens.colorFunctionalLightGray80,
    val elevationDragOnBgEmphasizedLight: Color = ColorRawTokens.colorFunctionalDarkGray720,
    val elevationDragOnBgSecondaryLight: Color = ColorRawTokens.colorFunctionalLightGray80,
    val elevationModalLight: Color = ColorRawTokens.colorFunctionalWhite,
    val elevationOverlayDefaultLight: Color = ColorRawTokens.colorFunctionalWhite,
    val elevationOverlayDefaultOnBgEmphasizedLight: Color = ColorRawTokens.colorFunctionalDarkGray720,
    val elevationOverlayDefaultOnBgSecondaryLight: Color = ColorRawTokens.colorFunctionalWhite,
    val elevationOverlayEmphasizedLight: Color = ColorRawTokens.colorFunctionalDarkGray640,
    val elevationOverlayEmphasizedOnBgEmphasizedLight: Color = ColorRawTokens.colorFunctionalLightGray80,
    val elevationOverlayEmphasizedOnBgSecondaryLight: Color = ColorRawTokens.colorFunctionalDarkGray640,
    val elevationRaisedLight: Color = ColorRawTokens.colorFunctionalWhite,
    val elevationRaisedOnBgEmphasizedLight: Color = ColorRawTokens.colorFunctionalDarkGray800,
    val elevationRaisedOnBgSecondaryLight: Color = ColorRawTokens.colorFunctionalWhite,
    val elevationDragDark: Color = ColorRawTokens.colorFunctionalDarkGray720,
    val elevationDragOnBgEmphasizedDark: Color = ColorRawTokens.colorFunctionalDarkGray480,
    val elevationDragOnBgSecondaryDark: Color = ColorRawTokens.colorFunctionalDarkGray640,
    val elevationModalDark: Color = ColorRawTokens.colorFunctionalDarkGray640,
    val elevationOverlayDefaultDark: Color = ColorRawTokens.colorFunctionalDarkGray720,
    val elevationOverlayDefaultOnBgEmphasizedDark: Color = ColorRawTokens.colorFunctionalDarkGray480,
    val elevationOverlayDefaultOnBgSecondaryDark: Color = ColorRawTokens.colorFunctionalDarkGray640,
    val elevationOverlayEmphasizedDark: Color = ColorRawTokens.colorFunctionalDarkGray480,
    val elevationOverlayEmphasizedOnBgEmphasizedDark: Color = ColorRawTokens.colorFunctionalDarkGray400,
    val elevationOverlayEmphasizedOnBgSecondaryDark: Color = ColorRawTokens.colorFunctionalDarkGray480,
    val elevationRaisedDark: Color = ColorRawTokens.colorFunctionalDarkGray800,
    val elevationRaisedOnBgEmphasizedDark: Color = ColorRawTokens.colorFunctionalDarkGray560,
    val elevationRaisedOnBgSecondaryDark: Color = ColorRawTokens.colorFunctionalDarkGray720,
)

data class OudsGradientColorSemanticTokens(
    val gradientSkeletonMiddleLight: Color = ColorRawTokens.colorFunctionalLightGray160,
    val gradientSkeletonMiddleOnBgEmphasizedLight: Color = ColorRawTokens.colorFunctionalDarkGray640,
    val gradientSkeletonStartEndLight: Color = ColorRawTokens.colorFunctionalLightGray80,
    val gradientSkeletonStartEndOnBgEmphasizedLight: Color = ColorRawTokens.colorFunctionalDarkGray720,
    val gradientSkeletonMiddleDark: Color = ColorRawTokens.colorFunctionalDarkGray720,
    val gradientSkeletonMiddleOnBgEmphasizedDark: Color = ColorRawTokens.colorFunctionalDarkGray560,
    val gradientSkeletonStartEndDark: Color = ColorRawTokens.colorFunctionalDarkGray800,
    val gradientSkeletonStartEndOnBgEmphasizedDark: Color = ColorRawTokens.colorFunctionalDarkGray640,
)

data class OudsDecorativeColorSemanticTokens(
    val decorativeAccent1DefaultLight: Color = ColorRawTokens.colorDecorativeEmerald500,
    val decorativeAccent1EmphasizedLight: Color = ColorRawTokens.colorDecorativeEmerald700,
    val decorativeAccent1MutedLight: Color = ColorRawTokens.colorDecorativeEmerald200,
    val decorativeAccent2DefaultLight: Color = ColorRawTokens.colorDecorativeSky400,
    val decorativeAccent2EmphasizedLight: Color = ColorRawTokens.colorDecorativeSky700,
    val decorativeAccent2MutedLight: Color = ColorRawTokens.colorDecorativeSky200,
    val decorativeAccent3DefaultLight: Color = ColorRawTokens.colorFunctionalSun500,
    val decorativeAccent3EmphasizedLight: Color = ColorRawTokens.colorDecorativeAmber500,
    val decorativeAccent3MutedLight: Color = ColorRawTokens.colorFunctionalSun200,
    val decorativeAccent4DefaultLight: Color = ColorRawTokens.colorDecorativeAmethyst400,
    val decorativeAccent4EmphasizedLight: Color = ColorRawTokens.colorDecorativeAmethyst800,
    val decorativeAccent4MutedLight: Color = ColorRawTokens.colorDecorativeAmethyst200,
    val decorativeAccent5DefaultLight: Color = ColorRawTokens.colorDecorativeShockingPink200,
    val decorativeAccent5EmphasizedLight: Color = ColorRawTokens.colorDecorativeShockingPink300,
    val decorativeAccent5MutedLight: Color = ColorRawTokens.colorDecorativeShockingPink100,
    val decorativeBrandPrimaryLight: Color = OrangeBrandColorRawTokens.colorOrange500,
    val decorativeBrandSecondaryLight: Color = ColorRawTokens.colorFunctionalBlack,
    val decorativeBrandTertiaryLight: Color = ColorRawTokens.colorFunctionalWhite,
    val decorativeNeutralDefaultLight: Color = ColorRawTokens.colorFunctionalDarkGray400,
    val decorativeNeutralEmphasizedLight: Color = ColorRawTokens.colorFunctionalDarkGray640,
    val decorativeNeutralMutedLight: Color = ColorRawTokens.colorFunctionalLightGray160,
    val decorativeSkinTint100Light: Color = ColorRawTokens.colorDecorativeDeepPeach100,
    val decorativeSkinTint200Light: Color = ColorRawTokens.colorDecorativeDeepPeach200,
    val decorativeSkinTint300Light: Color = ColorRawTokens.colorDecorativeDeepPeach300,
    val decorativeSkinTint400Light: Color = ColorRawTokens.colorDecorativeDeepPeach400,
    val decorativeSkinTint500Light: Color = ColorRawTokens.colorDecorativeDeepPeach500,
    val decorativeSkinTint600Light: Color = ColorRawTokens.colorDecorativeDeepPeach600,
    val decorativeSkinTint700Light: Color = ColorRawTokens.colorDecorativeDeepPeach700,
    val decorativeSkinTint800Light: Color = ColorRawTokens.colorDecorativeDeepPeach800,
    val decorativeSkinTint900Light: Color = ColorRawTokens.colorDecorativeDeepPeach900,
    val decorativeAccent1DefaultDark: Color = ColorRawTokens.colorDecorativeEmerald500,
    val decorativeAccent1EmphasizedDark: Color = ColorRawTokens.colorDecorativeEmerald700,
    val decorativeAccent1MutedDark: Color = ColorRawTokens.colorDecorativeEmerald200,
    val decorativeAccent2DefaultDark: Color = ColorRawTokens.colorDecorativeSky400,
    val decorativeAccent2EmphasizedDark: Color = ColorRawTokens.colorDecorativeSky700,
    val decorativeAccent2MutedDark: Color = ColorRawTokens.colorDecorativeSky200,
    val decorativeAccent3DefaultDark: Color = ColorRawTokens.colorFunctionalSun500,
    val decorativeAccent3EmphasizedDark: Color = ColorRawTokens.colorDecorativeAmber500,
    val decorativeAccent3MutedDark: Color = ColorRawTokens.colorFunctionalSun200,
    val decorativeAccent4DefaultDark: Color = ColorRawTokens.colorDecorativeAmethyst400,
    val decorativeAccent4EmphasizedDark: Color = ColorRawTokens.colorDecorativeAmethyst800,
    val decorativeAccent4MutedDark: Color = ColorRawTokens.colorDecorativeAmethyst200,
    val decorativeAccent5DefaultDark: Color = ColorRawTokens.colorDecorativeShockingPink200,
    val decorativeAccent5EmphasizedDark: Color = ColorRawTokens.colorDecorativeShockingPink300,
    val decorativeAccent5MutedDark: Color = ColorRawTokens.colorDecorativeShockingPink100,
    val decorativeBrandPrimaryDark: Color = OrangeBrandColorRawTokens.colorOrange500,
    val decorativeBrandSecondaryDark: Color = ColorRawTokens.colorFunctionalLightGray160,
    val decorativeBrandTertiaryDark: Color = ColorRawTokens.colorFunctionalDarkGray880,
    val decorativeNeutralDefaultDark: Color = ColorRawTokens.colorFunctionalLightGray560,
    val decorativeNeutralEmphasizedDark: Color = ColorRawTokens.colorFunctionalLightGray160,
    val decorativeNeutralMutedDark: Color = ColorRawTokens.colorFunctionalDarkGray720,
    val decorativeSkinTint100Dark: Color = ColorRawTokens.colorDecorativeDeepPeach100,
    val decorativeSkinTint200Dark: Color = ColorRawTokens.colorDecorativeDeepPeach200,
    val decorativeSkinTint300Dark: Color = ColorRawTokens.colorDecorativeDeepPeach300,
    val decorativeSkinTint400Dark: Color = ColorRawTokens.colorDecorativeDeepPeach400,
    val decorativeSkinTint500Dark: Color = ColorRawTokens.colorDecorativeDeepPeach500,
    val decorativeSkinTint600Dark: Color = ColorRawTokens.colorDecorativeDeepPeach600,
    val decorativeSkinTint700Dark: Color = ColorRawTokens.colorDecorativeDeepPeach700,
    val decorativeSkinTint800Dark: Color = ColorRawTokens.colorDecorativeDeepPeach800,
    val decorativeSkinTint900Dark: Color = ColorRawTokens.colorDecorativeDeepPeach900
)