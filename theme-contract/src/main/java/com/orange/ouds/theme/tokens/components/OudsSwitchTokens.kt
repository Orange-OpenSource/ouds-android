//
// Software Name: OUDS Android
// SPDX-FileCopyrightText: Copyright (c) Orange SA
// SPDX-License-Identifier: MIT
//
// This software is distributed under the MIT license,
// the text of which is available at https://opensource.org/license/MIT/
// or see the "LICENSE" file for more details.
//
// Software description: Android library of reusable graphical components
//

// Tokens version 1.1.0
// Generated by Tokenator

package com.orange.ouds.theme.tokens.components

import com.orange.ouds.theme.tokens.OudsBorderKeyToken
import com.orange.ouds.theme.tokens.OudsColorKeyToken
import com.orange.ouds.theme.tokens.OudsLightDarkColorKeyToken
import com.orange.ouds.theme.tokens.OudsOpacityKeyToken
import com.orange.ouds.theme.tokens.OudsSizeKeyToken
import com.orange.ouds.theme.tokens.OudsSpaceKeyToken
import com.orange.ouds.tokens.raw.DimensionRawTokens

open class OudsSwitchTokens(
    val borderRadiusCursor: OudsBorderKeyToken.Radius = OudsBorderKeyToken.Radius.Pill,
    val borderRadiusTrack: OudsBorderKeyToken.Radius = OudsBorderKeyToken.Radius.Pill,
    val colorCheck: OudsColorKeyToken = OudsColorKeyToken.Content.Default,
    val colorCheckInteraction: OudsColorKeyToken = OudsColorKeyToken.Content.Default,
    val colorCursor: OudsColorKeyToken = OudsLightDarkColorKeyToken(
        OudsColorKeyToken.Repository.Neutral.Muted.White,
        OudsColorKeyToken.Repository.Neutral.Emphasized.Highest
    ),
    val colorTrackSelected: OudsColorKeyToken = OudsLightDarkColorKeyToken(
        OudsColorKeyToken.Repository.Positive.Default,
        OudsColorKeyToken.Repository.Positive.High
    ),
    val colorTrackSelectedInteraction: OudsColorKeyToken = OudsLightDarkColorKeyToken(
        OudsColorKeyToken.Repository.Positive.High,
        OudsColorKeyToken.Repository.Positive.Low
    ),
    val colorTrackUnselected: OudsColorKeyToken = OudsLightDarkColorKeyToken(
        OudsColorKeyToken.Repository.Opacity.Black.MediumHigh,
        OudsColorKeyToken.Repository.Opacity.White.High
    ),
    val colorTrackUnselectedInteraction: OudsColorKeyToken = OudsLightDarkColorKeyToken(
        OudsColorKeyToken.Repository.Opacity.Black.High,
        OudsColorKeyToken.Repository.Opacity.White.Higher
    ),
    val opacityCheck: OudsOpacityKeyToken = OudsOpacityKeyToken.Opaque,
    val sizeHeightCursorSelected: Float = DimensionRawTokens.dimension300,
    val sizeHeightCursorUnselected: Float = DimensionRawTokens.dimension200,
    val sizeHeightTrack: Float = DimensionRawTokens.dimension400,
    val sizeMaxHeight: Float = DimensionRawTokens.dimension400,
    val sizeMinHeight: Float = DimensionRawTokens.dimension400,
    val sizeMinHeightInteractiveArea: OudsSizeKeyToken = OudsSizeKeyToken.MinInteractiveArea,
    val sizeMinWidth: Float = DimensionRawTokens.dimension700,
    val sizeWidthCursorSelected: Float = DimensionRawTokens.dimension300,
    val sizeWidthCursorSelectedPressed: Float = DimensionRawTokens.dimension400,
    val sizeWidthCursorUnselected: Float = DimensionRawTokens.dimension200,
    val sizeWidthCursorUnselectedPressed: Float = DimensionRawTokens.dimension300,
    val sizeWidthTrack: Float = DimensionRawTokens.dimension700,
    val spacePaddingInlineSelected: OudsSpaceKeyToken.PaddingInline = OudsSpaceKeyToken.PaddingInline.ThreeExtraSmall,
    val spacePaddingInlineUnselected: OudsSpaceKeyToken.PaddingInline = OudsSpaceKeyToken.PaddingInline.ExtraSmall
)
