/*
 * Software Name: OUDS Android
 * SPDX-FileCopyrightText: Copyright (c) Orange SA
 * SPDX-License-Identifier: MIT
 *
 * This software is distributed under the MIT license,
 * the text of which is available at https://opensource.org/license/MIT/
 * or see the "LICENSE" file for more details.
 *
 * Software description: Android library of reusable graphical components
 */

package com.orange.ouds.theme.tokens.semantic

import androidx.compose.ui.graphics.Color
import com.orange.ouds.tokens.global.raw.ColorRawTokens
import com.orange.ouds.tokens.global.raw.OrangeBrandColorRawTokens

data class OudsColorContentSemanticTokens(
    val contentBrandPrimaryLight: Color = OrangeBrandColorRawTokens.colorOrange550,
    val contentBrandPrimaryOnBgEmphasizedLight: Color = OrangeBrandColorRawTokens.colorOrange500,
    val contentDefaultLight: Color = ColorRawTokens.colorFunctionalBlack,
    val contentDefaultOnBgEmphasizedLight: Color = ColorRawTokens.colorFunctionalLightGray160,
    val contentDisabledLight: Color = ColorRawTokens.colorFunctionalLightGray400,
    val contentDisabledOnBgEmphasizedLight: Color = ColorRawTokens.colorFunctionalDarkGray400,
    val contentMutedLight: Color = ColorRawTokens.colorFunctionalDarkGray400,
    val contentMutedOnBgEmphasizedLight: Color = ColorRawTokens.colorFunctionalLightGray560,
    val contentOnActionDisabledLight: Color = ColorRawTokens.colorFunctionalWhite,
    val contentOnActionDisabledOnBgEmphasizedLight: Color = ColorRawTokens.colorFunctionalBlack,
    val contentOnActionNegativeLight: Color = ColorRawTokens.colorFunctionalWhite,
    val contentOnActionPrimaryEnabledLight: Color = ColorRawTokens.colorFunctionalWhite,
    val contentOnActionPrimaryEnabledOnBgEmphasizedLight: Color = ColorRawTokens.colorFunctionalBlack,
    val contentOnActionPrimaryFocusLight: Color = ColorRawTokens.colorFunctionalWhite,
    val contentOnActionPrimaryFocusOnBgEmphasizedLight: Color = ColorRawTokens.colorFunctionalBlack,
    val contentOnActionPrimaryHoverLight: Color = ColorRawTokens.colorFunctionalWhite,
    val contentOnActionPrimaryHoverOnBgEmphasizedLight: Color = ColorRawTokens.colorFunctionalBlack,
    val contentOnActionPrimaryLoadingLight: Color = ColorRawTokens.colorFunctionalWhite,
    val contentOnActionPrimaryLoadingOnBgEmphasizedLight: Color = ColorRawTokens.colorFunctionalBlack,
    val contentOnActionPrimaryPressedLight: Color = ColorRawTokens.colorFunctionalWhite,
    val contentOnActionPrimaryPressedOnBgEmphasizedLight: Color = ColorRawTokens.colorFunctionalBlack,
    val contentOnBrandPrimaryLight: Color = ColorRawTokens.colorFunctionalWhite,
    val contentOnStatusAccentEmphasizedLight: Color = ColorRawTokens.colorFunctionalBlack,
    val contentOnStatusAccentMutedLight: Color = ColorRawTokens.colorFunctionalBlack,
    val contentOnStatusAccentMutedOnBgEmphasizedLight: Color = ColorRawTokens.colorFunctionalLightGray160,
    val contentOnStatusInfoEmphasizedLight: Color = ColorRawTokens.colorFunctionalBlack,
    val contentOnStatusInfoMutedLight: Color = ColorRawTokens.colorFunctionalBlack,
    val contentOnStatusInfoMutedOnBgEmphasizedLight: Color = ColorRawTokens.colorFunctionalLightGray160,
    val contentOnStatusNegativeEmphasizedLight: Color = ColorRawTokens.colorFunctionalWhite,
    val contentOnStatusNegativeMutedLight: Color = ColorRawTokens.colorFunctionalBlack,
    val contentOnStatusNegativeMutedOnBgEmphasizedLight: Color = ColorRawTokens.colorFunctionalLightGray160,
    val contentOnStatusPositiveEmphasizedLight: Color = ColorRawTokens.colorFunctionalBlack,
    val contentOnStatusPositiveMutedLight: Color = ColorRawTokens.colorFunctionalBlack,
    val contentOnStatusPositiveMutedOnBgEmphasizedLight: Color = ColorRawTokens.colorFunctionalLightGray160,
    val contentOnStatusWarningEmphasizedLight: Color = ColorRawTokens.colorFunctionalBlack,
    val contentOnStatusWarningMutedLight: Color = ColorRawTokens.colorFunctionalBlack,
    val contentOnStatusWarningMutedOnBgEmphasizedLight: Color = ColorRawTokens.colorFunctionalLightGray160,
    val contentStatusInfoLight: Color = ColorRawTokens.colorFunctionalDodgerBlue500,
    val contentStatusNegativeLight: Color = ColorRawTokens.colorFunctionalScarlet600,
    val contentStatusPositiveLight: Color = ColorRawTokens.colorFunctionalMalachite500,
    val contentStatusWarningLight: Color = ColorRawTokens.colorFunctionalSun500,
    val contentBrandPrimaryDark: Color = OrangeBrandColorRawTokens.colorOrange500,
    val contentBrandPrimaryOnBgEmphasizedDark: Color = OrangeBrandColorRawTokens.colorOrange500,
    val contentDefaultDark: Color = ColorRawTokens.colorFunctionalLightGray160,
    val contentDefaultOnBgEmphasizedDark: Color = ColorRawTokens.colorFunctionalLightGray160,
    val contentDisabledDark: Color = ColorRawTokens.colorFunctionalDarkGray400,
    val contentDisabledOnBgEmphasizedDark: Color = ColorRawTokens.colorFunctionalDarkGray400,
    val contentMutedDark: Color = ColorRawTokens.colorFunctionalLightGray560,
    val contentMutedOnBgEmphasizedDark: Color = ColorRawTokens.colorFunctionalLightGray560,
    val contentOnActionDisabledDark: Color = ColorRawTokens.colorFunctionalBlack,
    val contentOnActionDisabledOnBgEmphasizedDark: Color = ColorRawTokens.colorFunctionalBlack,
    val contentOnActionNegativeDark: Color = ColorRawTokens.colorFunctionalWhite,
    val contentOnActionPrimaryEnabledDark: Color = ColorRawTokens.colorFunctionalBlack,
    val contentOnActionPrimaryEnabledOnBgEmphasizedDark: Color = ColorRawTokens.colorFunctionalBlack,
    val contentOnActionPrimaryFocusDark: Color = ColorRawTokens.colorFunctionalBlack,
    val contentOnActionPrimaryFocusOnBgEmphasizedDark: Color = ColorRawTokens.colorFunctionalBlack,
    val contentOnActionPrimaryHoverDark: Color = ColorRawTokens.colorFunctionalBlack,
    val contentOnActionPrimaryHoverOnBgEmphasizedDark: Color = ColorRawTokens.colorFunctionalBlack,
    val contentOnActionPrimaryLoadingDark: Color = ColorRawTokens.colorFunctionalBlack,
    val contentOnActionPrimaryLoadingOnBgEmphasizedDark: Color = ColorRawTokens.colorFunctionalBlack,
    val contentOnActionPrimaryPressedDark: Color = ColorRawTokens.colorFunctionalBlack,
    val contentOnActionPrimaryPressedOnBgEmphasizedDark: Color = ColorRawTokens.colorFunctionalBlack,
    val contentOnBrandPrimaryDark: Color = ColorRawTokens.colorFunctionalBlack,
    val contentOnStatusAccentEmphasizedDark: Color = ColorRawTokens.colorFunctionalBlack,
    val contentOnStatusAccentMutedDark: Color = ColorRawTokens.colorFunctionalLightGray160,
    val contentOnStatusAccentMutedOnBgEmphasizedDark: Color = ColorRawTokens.colorFunctionalLightGray160,
    val contentOnStatusInfoEmphasizedDark: Color = ColorRawTokens.colorFunctionalBlack,
    val contentOnStatusInfoMutedDark: Color = ColorRawTokens.colorFunctionalLightGray160,
    val contentOnStatusInfoMutedOnBgEmphasizedDark: Color = ColorRawTokens.colorFunctionalLightGray160,
    val contentOnStatusNegativeEmphasizedDark: Color = ColorRawTokens.colorFunctionalWhite,
    val contentOnStatusNegativeMutedDark: Color = ColorRawTokens.colorFunctionalLightGray160,
    val contentOnStatusNegativeMutedOnBgEmphasizedDark: Color = ColorRawTokens.colorFunctionalLightGray160,
    val contentOnStatusPositiveEmphasizedDark: Color = ColorRawTokens.colorFunctionalBlack,
    val contentOnStatusPositiveMutedDark: Color = ColorRawTokens.colorFunctionalLightGray160,
    val contentOnStatusPositiveMutedOnBgEmphasizedDark: Color = ColorRawTokens.colorFunctionalLightGray160,
    val contentOnStatusWarningEmphasizedDark: Color = ColorRawTokens.colorFunctionalBlack,
    val contentOnStatusWarningMutedDark: Color = ColorRawTokens.colorFunctionalLightGray160,
    val contentOnStatusWarningMutedOnBgEmphasizedDark: Color = ColorRawTokens.colorFunctionalLightGray160,
    val contentStatusInfoDark: Color = ColorRawTokens.colorFunctionalDodgerBlue500,
    val contentStatusNegativeDark: Color = ColorRawTokens.colorFunctionalScarlet600,
    val contentStatusPositiveDark: Color = ColorRawTokens.colorFunctionalMalachite500,
    val contentStatusWarningDark: Color = ColorRawTokens.colorFunctionalSun500,
)