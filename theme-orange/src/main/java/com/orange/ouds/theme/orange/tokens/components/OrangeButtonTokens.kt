//
// Software Name: OUDS Android
// SPDX-FileCopyrightText: Copyright (c) Orange SA
// SPDX-License-Identifier: MIT
//
// This software is distributed under the MIT license,
// the text of which is available at https://opensource.org/license/MIT/
// or see the "LICENSE" file for more details.
//
// Software description: Android library of reusable graphical components
//

// Orange brand tokens version 2.0.0
// Generated by Tokenator

package com.orange.ouds.theme.orange.tokens.components

import com.orange.ouds.theme.tokens.components.OudsButtonTokens
import com.orange.ouds.theme.tokens.OudsBorderKeyToken
import com.orange.ouds.theme.tokens.OudsColorKeyToken
import com.orange.ouds.theme.tokens.OudsLightDarkColorKeyToken
import com.orange.ouds.theme.tokens.OudsSizeKeyToken
import com.orange.ouds.theme.tokens.OudsSpaceKeyToken

data class OrangeButtonTokens(
    override val borderRadiusDefault: OudsBorderKeyToken.Radius = OudsBorderKeyToken.Radius.Default,
    override val borderRadiusRounded: OudsBorderKeyToken.Radius = OudsBorderKeyToken.Radius.Medium,
    override val borderRadiusSocial: OudsBorderKeyToken.Radius = OudsBorderKeyToken.Radius.Pill,
    override val borderWidthDefault: OudsBorderKeyToken.Width = OudsBorderKeyToken.Width.Default,
    override val borderWidthDefaultInteraction: OudsBorderKeyToken.Width = OudsBorderKeyToken.Width.Medium,
    override val borderWidthDefaultInteractionMono: OudsBorderKeyToken.Width = OudsBorderKeyToken.Width.None,
    override val colorBgBrandEnabled: OudsColorKeyToken = OudsColorKeyToken.Surface.Brand.Primary,
    override val colorBgBrandFocus: OudsColorKeyToken = OudsColorKeyToken.Action.Focus,
    override val colorBgBrandHover: OudsColorKeyToken = OudsColorKeyToken.Action.Hover,
    override val colorBgBrandLoading: OudsColorKeyToken = OudsLightDarkColorKeyToken(OudsColorKeyToken.Repository.Neutral.Emphasized.Black, OudsColorKeyToken.Repository.Neutral.Muted.Lower),
    override val colorBgBrandPressed: OudsColorKeyToken = OudsLightDarkColorKeyToken(OudsColorKeyToken.Repository.Neutral.Emphasized.Black, OudsColorKeyToken.Repository.Neutral.Muted.Lower),
    override val colorBgDefaultDisabled: OudsColorKeyToken = OudsColorKeyToken.Opacity.Transparent,
    override val colorBgDefaultEnabled: OudsColorKeyToken = OudsColorKeyToken.Opacity.Transparent,
    override val colorBgDefaultFocus: OudsColorKeyToken = OudsColorKeyToken.Opacity.Transparent,
    override val colorBgDefaultHover: OudsColorKeyToken = OudsColorKeyToken.Opacity.Transparent,
    override val colorBgDefaultLoading: OudsColorKeyToken = OudsColorKeyToken.Opacity.Transparent,
    override val colorBgDefaultPressed: OudsColorKeyToken = OudsColorKeyToken.Opacity.Transparent,
    override val colorBgMinimalFocus: OudsColorKeyToken = OudsColorKeyToken.Action.Support.Focus,
    override val colorBgMinimalHover: OudsColorKeyToken = OudsColorKeyToken.Action.Support.Hover,
    override val colorBgMinimalPressed: OudsColorKeyToken = OudsColorKeyToken.Action.Support.Pressed,
    override val colorBorderDefaultDisabled: OudsColorKeyToken = OudsColorKeyToken.Action.Disabled,
    override val colorBorderDefaultEnabled: OudsColorKeyToken = OudsColorKeyToken.Action.Enabled,
    override val colorBorderDefaultFocus: OudsColorKeyToken = OudsColorKeyToken.Action.Focus,
    override val colorBorderDefaultHover: OudsColorKeyToken = OudsColorKeyToken.Action.Hover,
    override val colorBorderDefaultLoading: OudsColorKeyToken = OudsColorKeyToken.Action.Loading,
    override val colorBorderDefaultPressed: OudsColorKeyToken = OudsColorKeyToken.Action.Pressed,
    override val colorContentBrandEnabled: OudsColorKeyToken = OudsColorKeyToken.Content.OnBrand.Primary,
    override val colorContentBrandFocus: OudsColorKeyToken = OudsColorKeyToken.Content.OnAction.Focus,
    override val colorContentBrandHover: OudsColorKeyToken = OudsColorKeyToken.Content.OnAction.Hover,
    override val colorContentBrandLoading: OudsColorKeyToken = OudsLightDarkColorKeyToken(OudsColorKeyToken.Repository.Neutral.Muted.White, OudsColorKeyToken.Repository.Neutral.Emphasized.Black),
    override val colorContentBrandPressed: OudsColorKeyToken = OudsLightDarkColorKeyToken(OudsColorKeyToken.Repository.Neutral.Muted.White, OudsColorKeyToken.Repository.Neutral.Emphasized.Black),
    override val colorContentDefaultDisabled: OudsColorKeyToken = OudsColorKeyToken.Action.Disabled,
    override val colorContentDefaultEnabled: OudsColorKeyToken = OudsColorKeyToken.Action.Enabled,
    override val colorContentDefaultFocus: OudsColorKeyToken = OudsColorKeyToken.Action.Focus,
    override val colorContentDefaultHover: OudsColorKeyToken = OudsColorKeyToken.Action.Hover,
    override val colorContentDefaultLoading: OudsColorKeyToken = OudsColorKeyToken.Action.Loading,
    override val colorContentDefaultPressed: OudsColorKeyToken = OudsColorKeyToken.Action.Pressed,
    override val colorContentMinimalDisabled: OudsColorKeyToken = OudsColorKeyToken.Action.Disabled,
    override val colorContentMinimalEnabled: OudsColorKeyToken = OudsColorKeyToken.Action.Enabled,
    override val colorContentMinimalFocus: OudsColorKeyToken = OudsColorKeyToken.Action.Focus,
    override val colorContentMinimalHover: OudsColorKeyToken = OudsColorKeyToken.Action.Hover,
    override val colorContentMinimalLoading: OudsColorKeyToken = OudsColorKeyToken.Content.Default,
    override val colorContentMinimalPressed: OudsColorKeyToken = OudsColorKeyToken.Action.Pressed,
    override val sizeIcon: OudsSizeKeyToken.Icon = OudsSizeKeyToken.Icon.WithLabel.Large.SizeExtraSmall,
    override val sizeIconOnly: OudsSizeKeyToken.Icon = OudsSizeKeyToken.Icon.WithLabel.Large.SizeSmall,
    override val sizeLoader: OudsSizeKeyToken.Icon = OudsSizeKeyToken.Icon.WithLabel.Large.SizeExtraSmall,
    override val sizeMaxHeightIconOnly: OudsSizeKeyToken = OudsSizeKeyToken.MinInteractiveArea,
    override val sizeMinHeight: OudsSizeKeyToken = OudsSizeKeyToken.MinInteractiveArea,
    override val sizeMinWidth: OudsSizeKeyToken = OudsSizeKeyToken.MinInteractiveArea,
    override val spaceColumnGapChevron: OudsSpaceKeyToken.ColumnGap = OudsSpaceKeyToken.ColumnGap.ExtraSmall,
    override val spaceColumnGapIcon: OudsSpaceKeyToken.ColumnGap = OudsSpaceKeyToken.ColumnGap.Small,
    override val spaceColumnGapIconChevron: OudsSpaceKeyToken.ColumnGap = OudsSpaceKeyToken.ColumnGap.TwoExtraSmall,
    override val spaceInsetIconOnly: OudsSpaceKeyToken.Inset = OudsSpaceKeyToken.Inset.Medium,
    override val spacePaddingBlock: OudsSpaceKeyToken.PaddingBlock = OudsSpaceKeyToken.PaddingBlock.Medium,
    override val spacePaddingInlineChevronEnd: OudsSpaceKeyToken.PaddingInline = OudsSpaceKeyToken.PaddingInline.Large,
    override val spacePaddingInlineChevronStart: OudsSpaceKeyToken.PaddingInline = OudsSpaceKeyToken.PaddingInline.Large,
    override val spacePaddingInlineEndIconStart: OudsSpaceKeyToken.PaddingInline = OudsSpaceKeyToken.PaddingInline.ThreeExtraLarge,
    override val spacePaddingInlineIconNone: OudsSpaceKeyToken.PaddingInline = OudsSpaceKeyToken.PaddingInline.FourExtraLarge,
    override val spacePaddingInlineIconStart: OudsSpaceKeyToken.PaddingInline = OudsSpaceKeyToken.PaddingInline.ExtraLarge,
    override val spacePaddingInlineStartIconEnd: OudsSpaceKeyToken.PaddingInline = OudsSpaceKeyToken.PaddingInline.ThreeExtraLarge
) : OudsButtonTokens
