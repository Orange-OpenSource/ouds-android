//
// Software Name: OUDS Android
// SPDX-FileCopyrightText: Copyright (c) Orange SA
// SPDX-License-Identifier: MIT
//
// This software is distributed under the MIT license,
// the text of which is available at https://opensource.org/license/MIT/
// or see the "LICENSE" file for more details.
//
// Software description: Android library of reusable graphical components
//

// Tokens version 1.1.0
// Generated by Tokenator

package com.orange.ouds.theme.orange.tokens.semantic

import com.orange.ouds.theme.tokens.semantic.OrangeColoredBackgroundModeSemanticTokens

data class OrangeColoredBackgroundModeSemanticTokens(
    override val onBgPrimaryLight: String = "light",
    override val onBgPrimaryDark: String = "dark",
    override val onBgSecondaryLight: String = "light",
    override val onBgSecondaryDark: String = "dark",
    override val onBgTertiaryLight: String = "light",
    override val onBgTertiaryDark: String = "dark",
    override val onBgEmphasizedLight: String = "dark",
    override val onBgEmphasizedDark: String = "dark",
    override val onBrandPrimaryLight: String = "mono-light",
    override val onBrandPrimaryDark: String = "mono-light",
    override val onBrandSecondaryLight: String = "⛔️",
    override val onBrandSecondaryDark: String = "⛔️",
    override val onBrandTertiaryLight: String = "⛔️",
    override val onBrandTertiaryDark: String = "⛔️",
    override val onStatusNeutralMutedLight: String = "light",
    override val onStatusNeutralMutedDark: String = "dark",
    override val onStatusNeutralEmphasizedLight: String = "dark",
    override val onStatusNeutralEmphasizedDark: String = "light",
    override val onStatusPositiveMutedLight: String = "light",
    override val onStatusPositiveMutedDark: String = "dark",
    override val onStatusPositiveEmphasizedLight: String = "mono-light",
    override val onStatusPositiveEmphasizedDark: String = "mono-light",
    override val onStatusInfoMutedLight: String = "light",
    override val onStatusInfoMutedDark: String = "dark",
    override val onStatusInfoEmphasizedLight: String = "mono-light",
    override val onStatusInfoEmphasizedDark: String = "mono-light",
    override val onStatusWarningMutedLight: String = "light",
    override val onStatusWarningMutedDark: String = "dark",
    override val onStatusWarningEmphasizedLight: String = "mono-light",
    override val onStatusWarningEmphasizedDark: String = "mono-light",
    override val onStatusNegativeMutedLight: String = "light",
    override val onStatusNegativeMutedDark: String = "dark",
    override val onStatusNegativeEmphasizedLight: String = "mono-dark",
    override val onStatusNegativeEmphasizedDark: String = "mono-light",
    override val onStatusAccentMutedLight: String = "light",
    override val onStatusAccentMutedDark: String = "darkt",
    override val onStatusAccentEmphasizedLight: String = "mono-light",
    override val onStatusAccentEmphasizedDark: String = "mono-light",
    override val onOverlayDefaultLight: String = "light",
    override val onOverlayDefaultDark: String = "dark",
    override val onOverlayEmphasizedLight: String = "dark",
    override val onOverlayEmphasizedDark: String = "light",
    override val onModalLight: String = "light",
    override val onModalDark: String = "dark"
) : OudsColoredBackgroundModeSemanticTokens
