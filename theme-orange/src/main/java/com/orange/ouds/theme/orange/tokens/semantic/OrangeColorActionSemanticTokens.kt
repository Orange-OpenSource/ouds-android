//
// Software Name: OUDS Android
// SPDX-FileCopyrightText: Copyright (c) Orange SA
// SPDX-License-Identifier: MIT
//
// This software is distributed under the MIT license,
// the text of which is available at https://opensource.org/license/MIT/
// or see the "LICENSE" file for more details.
//
// Software description: Android library of reusable graphical components
//

// Tokens version 1.1.0
// Generated by Tokenator

package com.orange.ouds.theme.orange.tokens.semantic

import androidx.compose.ui.graphics.Color
import com.orange.ouds.theme.orange.tokens.raw.OrangeColorRawTokens
import com.orange.ouds.theme.tokens.semantic.OudsColorActionSemanticTokens
import com.orange.ouds.tokens.global.raw.ColorRawTokens

data class OrangeColorActionSemanticTokens(
    override val actionEnabledLight: Color = ColorRawTokens.colorFunctionalBlack,
    override val actionEnabledDark: Color = ColorRawTokens.colorFunctionalGrayLight160,
    override val actionHoverLight: Color = ColorRawTokens.colorOpacityBlack680,
    override val actionHoverDark: Color = ColorRawTokens.colorOpacityWhite640,
    override val actionPressedLight: Color = OrangeColorRawTokens.colorOrange550,
    override val actionPressedDark: Color = OrangeColorRawTokens.colorOrange500,
    override val actionLoadingLight: Color = OrangeColorRawTokens.colorOrange550,
    override val actionLoadingDark: Color = OrangeColorRawTokens.colorOrange500,
    override val actionDisabledLight: Color = ColorRawTokens.colorOpacityBlack200,
    override val actionDisabledDark: Color = ColorRawTokens.colorOpacityWhite200,
    override val actionFocusLight: Color = ColorRawTokens.colorOpacityBlack680,
    override val actionFocusDark: Color = ColorRawTokens.colorOpacityWhite640,
    override val actionSelectedLight: Color = OrangeColorRawTokens.colorOrange550,
    override val actionSelectedDark: Color = OrangeColorRawTokens.colorOrange500,
    override val actionVisitedLight: Color = OrangeColorRawTokens.colorDecorativeAmethyst600,
    override val actionVisitedDark: Color = OrangeColorRawTokens.colorDecorativeAmethyst400,
    override val actionHighlightedLight: Color = ColorRawTokens.colorFunctionalBlack,
    override val actionHighlightedDark: Color = ColorRawTokens.colorFunctionalGrayLight160,
    override val actionSupportEnabledLight: Color = ColorRawTokens.colorOpacityBlack40,
    override val actionSupportEnabledDark: Color = ColorRawTokens.colorOpacityWhite40,
    override val actionSupportHoverLight: Color = ColorRawTokens.colorOpacityBlack80,
    override val actionSupportHoverDark: Color = ColorRawTokens.colorOpacityWhite80,
    override val actionSupportPressedLight: Color = ColorRawTokens.colorOpacityBlack120,
    override val actionSupportPressedDark: Color = ColorRawTokens.colorOpacityWhite120,
    override val actionSupportLoadingLight: Color = ColorRawTokens.colorOpacityBlack120,
    override val actionSupportLoadingDark: Color = ColorRawTokens.colorOpacityWhite120,
    override val actionSupportFocusLight: Color = ColorRawTokens.colorOpacityBlack80,
    override val actionSupportFocusDark: Color = ColorRawTokens.colorOpacityWhite80,
    override val actionNegativeEnabledLight: Color = ColorRawTokens.colorFunctionalScarlet600,
    override val actionNegativeEnabledDark: Color = ColorRawTokens.colorFunctionalScarlet300,
    override val actionNegativeHoverLight: Color = ColorRawTokens.colorFunctionalScarlet700,
    override val actionNegativeHoverDark: Color = ColorRawTokens.colorFunctionalScarlet200,
    override val actionNegativePressedLight: Color = ColorRawTokens.colorFunctionalScarlet800,
    override val actionNegativePressedDark: Color = ColorRawTokens.colorFunctionalScarlet100,
    override val actionNegativeLoadingLight: Color = ColorRawTokens.colorFunctionalScarlet800,
    override val actionNegativeLoadingDark: Color = ColorRawTokens.colorFunctionalScarlet100,
    override val actionNegativeFocusLight: Color = ColorRawTokens.colorFunctionalScarlet700,
    override val actionNegativeFocusDark: Color = ColorRawTokens.colorFunctionalScarlet200
) : OudsColorActionSemanticTokens
