//
// Software Name: OUDS Android
// SPDX-FileCopyrightText: Copyright (c) Orange SA
// SPDX-License-Identifier: MIT
//
// This software is distributed under the MIT license,
// the text of which is available at https://opensource.org/license/MIT/
// or see the "LICENSE" file for more details.
//
// Software description: Android library of reusable graphical components
//

// Orange brand tokens version 2.1.0
// Generated by Tokenator

package com.orange.ouds.theme.orange.tokens.semantic

import com.orange.ouds.theme.tokens.semantic.OudsSpaceSemanticTokens
import com.orange.ouds.tokens.raw.DimensionRawTokens

data class OrangeSpaceSemanticTokens(
    override val columnGap2xlarge: Float = DimensionRawTokens.dimension300,
    override val columnGap2xsmall: Float = DimensionRawTokens.dimension50,
    override val columnGap3xsmall: Float = DimensionRawTokens.dimensionOutOfSystem50,
    override val columnGapLarge: Float = DimensionRawTokens.dimension200,
    override val columnGapMedium: Float = DimensionRawTokens.dimension150,
    override val columnGapNone: Float = DimensionRawTokens.dimension0,
    override val columnGapSmall: Float = DimensionRawTokens.dimension100,
    override val columnGapXlarge: Float = DimensionRawTokens.dimension250,
    override val columnGapXsmall: Float = DimensionRawTokens.dimensionOutOfSystem150,
    override val fixed2xlarge: Float = DimensionRawTokens.dimension500,
    override val fixed2xsmall: Float = DimensionRawTokens.dimension50,
    override val fixed3xlarge: Float = DimensionRawTokens.dimension600,
    override val fixed3xsmall: Float = DimensionRawTokens.dimensionOutOfSystem50,
    override val fixed4xlarge: Float = DimensionRawTokens.dimension700,
    override val fixed5xlarge: Float = DimensionRawTokens.dimension800,
    override val fixedLarge: Float = DimensionRawTokens.dimension300,
    override val fixedMedium: Float = DimensionRawTokens.dimension200,
    override val fixedNone: Float = DimensionRawTokens.dimension0,
    override val fixedSmall: Float = DimensionRawTokens.dimension150,
    override val fixedXlarge: Float = DimensionRawTokens.dimension400,
    override val fixedXsmall: Float = DimensionRawTokens.dimension100,
    override val inset2xlarge: Float = DimensionRawTokens.dimension400,
    override val inset2xsmall: Float = DimensionRawTokens.dimension50,
    override val inset3xlarge: Float = DimensionRawTokens.dimension500,
    override val inset3xsmall: Float = DimensionRawTokens.dimensionOutOfSystem50,
    override val inset4xsmall: Float = DimensionRawTokens.dimensionOutOfSystem25,
    override val insetLarge: Float = DimensionRawTokens.dimension200,
    override val insetMedium: Float = DimensionRawTokens.dimension150,
    override val insetNone: Float = DimensionRawTokens.dimension0,
    override val insetSmall: Float = DimensionRawTokens.dimension100,
    override val insetXlarge: Float = DimensionRawTokens.dimension300,
    override val insetXsmall: Float = DimensionRawTokens.dimensionOutOfSystem150,
    override val paddingBlock2xlarge: Float = DimensionRawTokens.dimension300,
    override val paddingBlock2xsmall: Float = DimensionRawTokens.dimensionOutOfSystem150,
    override val paddingBlock3xlarge: Float = DimensionRawTokens.dimension350,
    override val paddingBlock3xsmall: Float = DimensionRawTokens.dimension50,
    override val paddingBlock4xlarge: Float = DimensionRawTokens.dimension400,
    override val paddingBlock4xsmall: Float = DimensionRawTokens.dimensionOutOfSystem50,
    override val paddingBlockLarge: Float = DimensionRawTokens.dimension200,
    override val paddingBlockMedium: Float = DimensionRawTokens.dimension150,
    override val paddingBlockNone: Float = DimensionRawTokens.dimension0,
    override val paddingBlockSmall: Float = DimensionRawTokens.dimensionOutOfSystem250,
    override val paddingBlockXlarge: Float = DimensionRawTokens.dimension250,
    override val paddingBlockXsmall: Float = DimensionRawTokens.dimension100,
    override val paddingInline2xlarge: Float = DimensionRawTokens.dimension300,
    override val paddingInline2xsmall: Float = DimensionRawTokens.dimensionOutOfSystem150,
    override val paddingInline3xlarge: Float = DimensionRawTokens.dimension350,
    override val paddingInline3xsmall: Float = DimensionRawTokens.dimension50,
    override val paddingInline4xlarge: Float = DimensionRawTokens.dimension400,
    override val paddingInline4xsmall: Float = DimensionRawTokens.dimensionOutOfSystem50,
    override val paddingInlineLarge: Float = DimensionRawTokens.dimension200,
    override val paddingInlineMedium: Float = DimensionRawTokens.dimension150,
    override val paddingInlineNone: Float = DimensionRawTokens.dimension0,
    override val paddingInlineSmall: Float = DimensionRawTokens.dimensionOutOfSystem250,
    override val paddingInlineXlarge: Float = DimensionRawTokens.dimension250,
    override val paddingInlineXsmall: Float = DimensionRawTokens.dimension100,
    override val rowGap2xsmall: Float = DimensionRawTokens.dimension50,
    override val rowGap3xsmall: Float = DimensionRawTokens.dimensionOutOfSystem50,
    override val rowGapLarge: Float = DimensionRawTokens.dimension200,
    override val rowGapMedium: Float = DimensionRawTokens.dimension150,
    override val rowGapNone: Float = DimensionRawTokens.dimension0,
    override val rowGapSmall: Float = DimensionRawTokens.dimension100,
    override val rowGapXsmall: Float = DimensionRawTokens.dimensionOutOfSystem150,
    override val scaled2xlargeMobile: Float = DimensionRawTokens.dimension500,
    override val scaled2xlargeTablet: Float = DimensionRawTokens.dimension600,
    override val scaled2xsmallMobile: Float = DimensionRawTokens.dimension50,
    override val scaled2xsmallTablet: Float = DimensionRawTokens.dimension100,
    override val scaled3xlargeMobile: Float = DimensionRawTokens.dimension600,
    override val scaled3xlargeTablet: Float = DimensionRawTokens.dimension700,
    override val scaled3xsmallMobile: Float = DimensionRawTokens.dimensionOutOfSystem50,
    override val scaled3xsmallTablet: Float = DimensionRawTokens.dimension50,
    override val scaledLargeMobile: Float = DimensionRawTokens.dimension300,
    override val scaledLargeTablet: Float = DimensionRawTokens.dimension400,
    override val scaledMediumMobile: Float = DimensionRawTokens.dimension200,
    override val scaledMediumTablet: Float = DimensionRawTokens.dimension300,
    override val scaledNoneMobile: Float = DimensionRawTokens.dimension0,
    override val scaledNoneTablet: Float = DimensionRawTokens.dimension0,
    override val scaledSmallMobile: Float = DimensionRawTokens.dimension150,
    override val scaledSmallTablet: Float = DimensionRawTokens.dimension200,
    override val scaledXlargeMobile: Float = DimensionRawTokens.dimension400,
    override val scaledXlargeTablet: Float = DimensionRawTokens.dimension500,
    override val scaledXsmallMobile: Float = DimensionRawTokens.dimension100,
    override val scaledXsmallTablet: Float = DimensionRawTokens.dimension150
) : OudsSpaceSemanticTokens
