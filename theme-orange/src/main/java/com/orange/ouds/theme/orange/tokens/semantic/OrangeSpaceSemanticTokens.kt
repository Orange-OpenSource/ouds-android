//
// Software Name: OUDS Android
// SPDX-FileCopyrightText: Copyright (c) Orange SA
// SPDX-License-Identifier: MIT
//
// This software is distributed under the MIT license,
// the text of which is available at https://opensource.org/license/MIT/
// or see the "LICENSE" file for more details.
//
// Software description: Android library of reusable graphical components
//

// Tokens version 0.5.0
// Generated by Tokenator

package com.orange.ouds.theme.orange.tokens.semantic

import com.orange.ouds.tokens.global.raw.DimensionRawTokens

data class OrangeSpaceSemanticTokens(
    val columnGapMedium: Float = DimensionRawTokens.dimension150,
    val columnGapNone: Float = DimensionRawTokens.dimension0,
    val columnGapShort: Float = DimensionRawTokens.dimension100,
    val columnGapShorter: Float = DimensionRawTokens.dimension75,
    val columnGapShortest: Float = DimensionRawTokens.dimension50,
    val columnGapSmash: Float = DimensionRawTokens.dimension25,
    val columnGapTall: Float = DimensionRawTokens.dimension200,
    val columnGapTaller: Float = DimensionRawTokens.dimension250,
    val columnGapTallest: Float = DimensionRawTokens.dimension300,
    val fixedHuge: Float = DimensionRawTokens.dimension700,
    val fixedJumbo: Float = DimensionRawTokens.dimension800,
    val fixedMedium: Float = DimensionRawTokens.dimension200,
    val fixedNone: Float = DimensionRawTokens.dimension0,
    val fixedShort: Float = DimensionRawTokens.dimension150,
    val fixedShorter: Float = DimensionRawTokens.dimension100,
    val fixedShortest: Float = DimensionRawTokens.dimension50,
    val fixedSmash: Float = DimensionRawTokens.dimension25,
    val fixedSpacious: Float = DimensionRawTokens.dimension600,
    val fixedTall: Float = DimensionRawTokens.dimension300,
    val fixedTaller: Float = DimensionRawTokens.dimension400,
    val fixedTallest: Float = DimensionRawTokens.dimension500,
    val insetMedium: Float = DimensionRawTokens.dimension150,
    val insetNone: Float = DimensionRawTokens.dimension0,
    val insetShort: Float = DimensionRawTokens.dimension100,
    val insetShorter: Float = DimensionRawTokens.dimension75,
    val insetShortest: Float = DimensionRawTokens.dimension50,
    val insetSmash: Float = DimensionRawTokens.dimension25,
    val insetSpacious: Float = DimensionRawTokens.dimension500,
    val insetTall: Float = DimensionRawTokens.dimension200,
    val insetTaller: Float = DimensionRawTokens.dimension300,
    val insetTallest: Float = DimensionRawTokens.dimension400,
    val paddingBlockHuge: Float = DimensionRawTokens.dimension400,
    val paddingBlockMedium: Float = DimensionRawTokens.dimension150,
    val paddingBlockNone: Float = DimensionRawTokens.dimension0,
    val paddingBlockShort: Float = DimensionRawTokens.dimension100,
    val paddingBlockShorter: Float = DimensionRawTokens.dimension75,
    val paddingBlockShortest: Float = DimensionRawTokens.dimension50,
    val paddingBlockSmash: Float = DimensionRawTokens.dimension25,
    val paddingBlockSpacious: Float = DimensionRawTokens.dimension350,
    val paddingBlockTall: Float = DimensionRawTokens.dimension200,
    val paddingBlockTaller: Float = DimensionRawTokens.dimension250,
    val paddingBlockTallest: Float = DimensionRawTokens.dimension300,
    val paddingInlineHuge: Float = DimensionRawTokens.dimension400,
    val paddingInlineMedium: Float = DimensionRawTokens.dimension150,
    val paddingInlineNone: Float = DimensionRawTokens.dimension0,
    val paddingInlineShort: Float = DimensionRawTokens.dimension100,
    val paddingInlineShorter: Float = DimensionRawTokens.dimension75,
    val paddingInlineShortest: Float = DimensionRawTokens.dimension50,
    val paddingInlineSmash: Float = DimensionRawTokens.dimension25,
    val paddingInlineSpacious: Float = DimensionRawTokens.dimension350,
    val paddingInlineTall: Float = DimensionRawTokens.dimension200,
    val paddingInlineTaller: Float = DimensionRawTokens.dimension250,
    val paddingInlineTallest: Float = DimensionRawTokens.dimension300,
    val rowGapMedium: Float = DimensionRawTokens.dimension150,
    val rowGapNone: Float = DimensionRawTokens.dimension0,
    val rowGapShort: Float = DimensionRawTokens.dimension100,
    val rowGapShorter: Float = DimensionRawTokens.dimension75,
    val rowGapShortest: Float = DimensionRawTokens.dimension50,
    val rowGapSmash: Float = DimensionRawTokens.dimension25,
    val rowGapTall: Float = DimensionRawTokens.dimension200,
    val scaledMediumMobile: Float = DimensionRawTokens.dimension200,
    val scaledMediumTablet: Float = DimensionRawTokens.dimension300,
    val scaledNoneMobile: Float = DimensionRawTokens.dimension0,
    val scaledNoneTablet: Float = DimensionRawTokens.dimension0,
    val scaledShortMobile: Float = DimensionRawTokens.dimension150,
    val scaledShortTablet: Float = DimensionRawTokens.dimension200,
    val scaledShorterMobile: Float = DimensionRawTokens.dimension100,
    val scaledShorterTablet: Float = DimensionRawTokens.dimension150,
    val scaledShortestMobile: Float = DimensionRawTokens.dimension50,
    val scaledShortestTablet: Float = DimensionRawTokens.dimension100,
    val scaledSmashMobile: Float = DimensionRawTokens.dimension25,
    val scaledSmashTablet: Float = DimensionRawTokens.dimension50,
    val scaledSpaciousMobile: Float = DimensionRawTokens.dimension600,
    val scaledSpaciousTablet: Float = DimensionRawTokens.dimension700,
    val scaledTallMobile: Float = DimensionRawTokens.dimension300,
    val scaledTallTablet: Float = DimensionRawTokens.dimension400,
    val scaledTallerMobile: Float = DimensionRawTokens.dimension400,
    val scaledTallerTablet: Float = DimensionRawTokens.dimension500,
    val scaledTallestMobile: Float = DimensionRawTokens.dimension500,
    val scaledTallestTablet: Float = DimensionRawTokens.dimension600
) : OudsSpaceSemanticTokens
