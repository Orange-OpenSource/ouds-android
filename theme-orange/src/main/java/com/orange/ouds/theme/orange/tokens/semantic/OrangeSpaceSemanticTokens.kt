//
// Software Name: OUDS Android
// SPDX-FileCopyrightText: Copyright (c) Orange SA
// SPDX-License-Identifier: MIT
//
// This software is distributed under the MIT license,
// the text of which is available at https://opensource.org/license/MIT/
// or see the "LICENSE" file for more details.
//
// Software description: Android library of reusable graphical components
//

// Tokens version 0.6.0
// Generated by Tokenator

package com.orange.ouds.theme.orange.tokens.semantic

import com.orange.ouds.theme.tokens.semantic.OudsSpaceSemanticTokens
import com.orange.ouds.tokens.global.raw.DimensionRawTokens

data class OrangeSpaceSemanticTokens(
    override val columnGapMedium: Float = DimensionRawTokens.dimension150,
    override val columnGapNone: Float = DimensionRawTokens.dimension0,
    override val columnGapShort: Float = DimensionRawTokens.dimension100,
    override val columnGapShorter: Float = DimensionRawTokens.dimension75,
    override val columnGapShortest: Float = DimensionRawTokens.dimension50,
    override val columnGapSmash: Float = DimensionRawTokens.dimension25,
    override val columnGapTall: Float = DimensionRawTokens.dimension200,
    override val columnGapTaller: Float = DimensionRawTokens.dimension250,
    override val columnGapTallest: Float = DimensionRawTokens.dimension300,
    override val fixedHuge: Float = DimensionRawTokens.dimension700,
    override val fixedJumbo: Float = DimensionRawTokens.dimension800,
    override val fixedMedium: Float = DimensionRawTokens.dimension200,
    override val fixedNone: Float = DimensionRawTokens.dimension0,
    override val fixedShort: Float = DimensionRawTokens.dimension150,
    override val fixedShorter: Float = DimensionRawTokens.dimension100,
    override val fixedShortest: Float = DimensionRawTokens.dimension50,
    override val fixedSmash: Float = DimensionRawTokens.dimension25,
    override val fixedSpacious: Float = DimensionRawTokens.dimension600,
    override val fixedTall: Float = DimensionRawTokens.dimension300,
    override val fixedTaller: Float = DimensionRawTokens.dimension400,
    override val fixedTallest: Float = DimensionRawTokens.dimension500,
    override val insetMedium: Float = DimensionRawTokens.dimension150,
    override val insetNone: Float = DimensionRawTokens.dimension0,
    override val insetShort: Float = DimensionRawTokens.dimension100,
    override val insetShorter: Float = DimensionRawTokens.dimension75,
    override val insetShortest: Float = DimensionRawTokens.dimension50,
    override val insetSmash: Float = DimensionRawTokens.dimension25,
    override val insetSpacious: Float = DimensionRawTokens.dimension500,
    override val insetTall: Float = DimensionRawTokens.dimension200,
    override val insetTaller: Float = DimensionRawTokens.dimension300,
    override val insetTallest: Float = DimensionRawTokens.dimension400,
    override val paddingBlockHuge: Float = DimensionRawTokens.dimension400,
    override val paddingBlockMedium: Float = DimensionRawTokens.dimension150,
    override val paddingBlockNone: Float = DimensionRawTokens.dimension0,
    override val paddingBlockShort: Float = DimensionRawTokens.dimension100,
    override val paddingBlockShorter: Float = DimensionRawTokens.dimension75,
    override val paddingBlockShortest: Float = DimensionRawTokens.dimension50,
    override val paddingBlockSmash: Float = DimensionRawTokens.dimension25,
    override val paddingBlockSpacious: Float = DimensionRawTokens.dimension350,
    override val paddingBlockTall: Float = DimensionRawTokens.dimension200,
    override val paddingBlockTaller: Float = DimensionRawTokens.dimension250,
    override val paddingBlockTallest: Float = DimensionRawTokens.dimension300,
    override val paddingInlineHuge: Float = DimensionRawTokens.dimension400,
    override val paddingInlineMedium: Float = DimensionRawTokens.dimension150,
    override val paddingInlineNone: Float = DimensionRawTokens.dimension0,
    override val paddingInlineShort: Float = DimensionRawTokens.dimension100,
    override val paddingInlineShorter: Float = DimensionRawTokens.dimension75,
    override val paddingInlineShortest: Float = DimensionRawTokens.dimension50,
    override val paddingInlineSmash: Float = DimensionRawTokens.dimension25,
    override val paddingInlineSpacious: Float = DimensionRawTokens.dimension350,
    override val paddingInlineTall: Float = DimensionRawTokens.dimension200,
    override val paddingInlineTaller: Float = DimensionRawTokens.dimension250,
    override val paddingInlineTallest: Float = DimensionRawTokens.dimension300,
    override val rowGapMedium: Float = DimensionRawTokens.dimension150,
    override val rowGapNone: Float = DimensionRawTokens.dimension0,
    override val rowGapShort: Float = DimensionRawTokens.dimension100,
    override val rowGapShorter: Float = DimensionRawTokens.dimension75,
    override val rowGapShortest: Float = DimensionRawTokens.dimension50,
    override val rowGapSmash: Float = DimensionRawTokens.dimension25,
    override val rowGapTall: Float = DimensionRawTokens.dimension200,
    override val scaledMediumMobile: Float = DimensionRawTokens.dimension200,
    override val scaledMediumTablet: Float = DimensionRawTokens.dimension300,
    override val scaledNoneMobile: Float = DimensionRawTokens.dimension0,
    override val scaledNoneTablet: Float = DimensionRawTokens.dimension0,
    override val scaledShortMobile: Float = DimensionRawTokens.dimension150,
    override val scaledShortTablet: Float = DimensionRawTokens.dimension200,
    override val scaledShorterMobile: Float = DimensionRawTokens.dimension100,
    override val scaledShorterTablet: Float = DimensionRawTokens.dimension150,
    override val scaledShortestMobile: Float = DimensionRawTokens.dimension50,
    override val scaledShortestTablet: Float = DimensionRawTokens.dimension100,
    override val scaledSmashMobile: Float = DimensionRawTokens.dimension25,
    override val scaledSmashTablet: Float = DimensionRawTokens.dimension50,
    override val scaledSpaciousMobile: Float = DimensionRawTokens.dimension600,
    override val scaledSpaciousTablet: Float = DimensionRawTokens.dimension700,
    override val scaledTallMobile: Float = DimensionRawTokens.dimension300,
    override val scaledTallTablet: Float = DimensionRawTokens.dimension400,
    override val scaledTallerMobile: Float = DimensionRawTokens.dimension400,
    override val scaledTallerTablet: Float = DimensionRawTokens.dimension500,
    override val scaledTallestMobile: Float = DimensionRawTokens.dimension500,
    override val scaledTallestTablet: Float = DimensionRawTokens.dimension600
) : OudsSpaceSemanticTokens
